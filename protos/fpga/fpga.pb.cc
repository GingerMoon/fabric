// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fpga.proto

#include "fpga.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_fpga_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TxWS_fpga_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_fpga_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TxRS_fpga_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_fpga_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Transaction4mvcc_fpga_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kv_5frwset_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Version_kv_5frwset_2eproto;
namespace protos {
class VsccEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VsccEnvelope> _instance;
} _VsccEnvelope_default_instance_;
class VsccResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VsccResponse> _instance;
} _VsccResponse_default_instance_;
class Block4mvccDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Block4mvcc> _instance;
} _Block4mvcc_default_instance_;
class Transaction4mvccDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Transaction4mvcc> _instance;
} _Transaction4mvcc_default_instance_;
class TxRSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxRS> _instance;
} _TxRS_default_instance_;
class TxWSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxWS> _instance;
} _TxWS_default_instance_;
class MvccResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MvccResponse> _instance;
} _MvccResponse_default_instance_;
}  // namespace protos
static void InitDefaultsVsccEnvelope_fpga_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_VsccEnvelope_default_instance_;
    new (ptr) ::protos::VsccEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::VsccEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VsccEnvelope_fpga_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVsccEnvelope_fpga_2eproto}, {}};

static void InitDefaultsVsccResponse_fpga_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_VsccResponse_default_instance_;
    new (ptr) ::protos::VsccResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::VsccResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VsccResponse_fpga_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVsccResponse_fpga_2eproto}, {}};

static void InitDefaultsBlock4mvcc_fpga_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_Block4mvcc_default_instance_;
    new (ptr) ::protos::Block4mvcc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::Block4mvcc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Block4mvcc_fpga_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBlock4mvcc_fpga_2eproto}, {
      &scc_info_Transaction4mvcc_fpga_2eproto.base,}};

static void InitDefaultsTransaction4mvcc_fpga_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_Transaction4mvcc_default_instance_;
    new (ptr) ::protos::Transaction4mvcc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::Transaction4mvcc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Transaction4mvcc_fpga_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTransaction4mvcc_fpga_2eproto}, {
      &scc_info_TxRS_fpga_2eproto.base,
      &scc_info_TxWS_fpga_2eproto.base,}};

static void InitDefaultsTxRS_fpga_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_TxRS_default_instance_;
    new (ptr) ::protos::TxRS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::TxRS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TxRS_fpga_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTxRS_fpga_2eproto}, {
      &scc_info_Version_kv_5frwset_2eproto.base,}};

static void InitDefaultsTxWS_fpga_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_TxWS_default_instance_;
    new (ptr) ::protos::TxWS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::TxWS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TxWS_fpga_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTxWS_fpga_2eproto}, {}};

static void InitDefaultsMvccResponse_fpga_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_MvccResponse_default_instance_;
    new (ptr) ::protos::MvccResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::MvccResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MvccResponse_fpga_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMvccResponse_fpga_2eproto}, {}};

void InitDefaults_fpga_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_VsccEnvelope_fpga_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VsccResponse_fpga_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Block4mvcc_fpga_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Transaction4mvcc_fpga_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TxRS_fpga_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TxWS_fpga_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MvccResponse_fpga_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_fpga_2eproto[7];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_fpga_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_fpga_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_fpga_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::VsccEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::VsccEnvelope, sign_r_),
  PROTOBUF_FIELD_OFFSET(::protos::VsccEnvelope, sign_s_),
  PROTOBUF_FIELD_OFFSET(::protos::VsccEnvelope, pk_x_),
  PROTOBUF_FIELD_OFFSET(::protos::VsccEnvelope, pk_y_),
  PROTOBUF_FIELD_OFFSET(::protos::VsccEnvelope, e_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::VsccResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::VsccResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::Block4mvcc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::Block4mvcc, num_),
  PROTOBUF_FIELD_OFFSET(::protos::Block4mvcc, txs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::Transaction4mvcc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::Transaction4mvcc, index_in_block_),
  PROTOBUF_FIELD_OFFSET(::protos::Transaction4mvcc, id_),
  PROTOBUF_FIELD_OFFSET(::protos::Transaction4mvcc, rd_count_),
  PROTOBUF_FIELD_OFFSET(::protos::Transaction4mvcc, wt_count_),
  PROTOBUF_FIELD_OFFSET(::protos::Transaction4mvcc, rs_),
  PROTOBUF_FIELD_OFFSET(::protos::Transaction4mvcc, ws_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::TxRS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::TxRS, key_),
  PROTOBUF_FIELD_OFFSET(::protos::TxRS, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::TxWS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::TxWS, key_),
  PROTOBUF_FIELD_OFFSET(::protos::TxWS, value_),
  PROTOBUF_FIELD_OFFSET(::protos::TxWS, is_del_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::MvccResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::MvccResponse, result_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::VsccEnvelope)},
  { 10, -1, sizeof(::protos::VsccResponse)},
  { 16, -1, sizeof(::protos::Block4mvcc)},
  { 23, -1, sizeof(::protos::Transaction4mvcc)},
  { 34, -1, sizeof(::protos::TxRS)},
  { 41, -1, sizeof(::protos::TxWS)},
  { 49, -1, sizeof(::protos::MvccResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_VsccEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_VsccResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_Block4mvcc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_Transaction4mvcc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_TxRS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_TxWS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_MvccResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_fpga_2eproto = {
  {}, AddDescriptors_fpga_2eproto, "fpga.proto", schemas,
  file_default_instances, TableStruct_fpga_2eproto::offsets,
  file_level_metadata_fpga_2eproto, 7, file_level_enum_descriptors_fpga_2eproto, file_level_service_descriptors_fpga_2eproto,
};

const char descriptor_table_protodef_fpga_2eproto[] =
  "\n\nfpga.proto\022\006protos\032\016kv_rwset.proto\"U\n\014"
  "VsccEnvelope\022\016\n\006sign_r\030\001 \001(\t\022\016\n\006sign_s\030\002"
  " \001(\t\022\014\n\004pk_x\030\003 \001(\t\022\014\n\004pk_y\030\004 \001(\t\022\t\n\001e\030\005 "
  "\001(\t\"\036\n\014VsccResponse\022\016\n\006result\030\001 \001(\010\"@\n\nB"
  "lock4mvcc\022\013\n\003num\030\001 \001(\004\022%\n\003txs\030\002 \003(\0132\030.pr"
  "otos.Transaction4mvcc\"\216\001\n\020Transaction4mv"
  "cc\022\026\n\016index_in_block\030\001 \001(\005\022\n\n\002id\030\002 \001(\t\022\020"
  "\n\010rd_count\030\003 \001(\r\022\020\n\010wt_count\030\004 \001(\r\022\030\n\002rs"
  "\030\005 \003(\0132\014.protos.TxRS\022\030\n\002ws\030\006 \003(\0132\014.proto"
  "s.TxWS\"6\n\004TxRS\022\013\n\003key\030\001 \001(\t\022!\n\007version\030\002"
  " \001(\0132\020.kvrwset.Version\"2\n\004TxWS\022\013\n\003key\030\001 "
  "\001(\t\022\r\n\005value\030\002 \001(\014\022\016\n\006is_del\030\003 \001(\010\"\036\n\014Mv"
  "ccResponse\022\016\n\006result\030\001 \001(\0102\204\001\n\004Fpga\022>\n\016V"
  "erifySig4vscc\022\024.protos.VsccEnvelope\032\024.pr"
  "otos.VsccResponse\"\000\022<\n\016SendBlock4mvcc\022\022."
  "protos.Block4mvcc\032\024.protos.MvccResponse\""
  "\000B+Z)github.com/hyperledger/fabric/proto"
  "s/fpgab\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_fpga_2eproto = {
  false, InitDefaults_fpga_2eproto, 
  descriptor_table_protodef_fpga_2eproto,
  "fpga.proto", &assign_descriptors_table_fpga_2eproto, 694,
};

void AddDescriptors_fpga_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_kv_5frwset_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_fpga_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_fpga_2eproto = []() { AddDescriptors_fpga_2eproto(); return true; }();
namespace protos {

// ===================================================================

void VsccEnvelope::InitAsDefaultInstance() {
}
class VsccEnvelope::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VsccEnvelope::kSignRFieldNumber;
const int VsccEnvelope::kSignSFieldNumber;
const int VsccEnvelope::kPkXFieldNumber;
const int VsccEnvelope::kPkYFieldNumber;
const int VsccEnvelope::kEFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VsccEnvelope::VsccEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.VsccEnvelope)
}
VsccEnvelope::VsccEnvelope(const VsccEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sign_r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign_r().size() > 0) {
    sign_r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_r_);
  }
  sign_s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign_s().size() > 0) {
    sign_s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_s_);
  }
  pk_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pk_x().size() > 0) {
    pk_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_x_);
  }
  pk_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pk_y().size() > 0) {
    pk_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_y_);
  }
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.e().size() > 0) {
    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
  // @@protoc_insertion_point(copy_constructor:protos.VsccEnvelope)
}

void VsccEnvelope::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VsccEnvelope_fpga_2eproto.base);
  sign_r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VsccEnvelope::~VsccEnvelope() {
  // @@protoc_insertion_point(destructor:protos.VsccEnvelope)
  SharedDtor();
}

void VsccEnvelope::SharedDtor() {
  sign_r_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VsccEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VsccEnvelope& VsccEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VsccEnvelope_fpga_2eproto.base);
  return *internal_default_instance();
}


void VsccEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.VsccEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sign_r_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_x_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VsccEnvelope::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VsccEnvelope*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string sign_r = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.VsccEnvelope.sign_r");
        auto str = msg->mutable_sign_r();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string sign_s = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.VsccEnvelope.sign_s");
        auto str = msg->mutable_sign_s();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string pk_x = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.VsccEnvelope.pk_x");
        auto str = msg->mutable_pk_x();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string pk_y = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.VsccEnvelope.pk_y");
        auto str = msg->mutable_pk_y();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string e = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.VsccEnvelope.e");
        auto str = msg->mutable_e();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VsccEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.VsccEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sign_r = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign_r()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign_r().data(), static_cast<int>(this->sign_r().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.VsccEnvelope.sign_r"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign_s()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign_s().data(), static_cast<int>(this->sign_s().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.VsccEnvelope.sign_s"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pk_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk_x()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pk_x().data(), static_cast<int>(this->pk_x().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.VsccEnvelope.pk_x"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pk_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk_y()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pk_y().data(), static_cast<int>(this->pk_y().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.VsccEnvelope.pk_y"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string e = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_e()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->e().data(), static_cast<int>(this->e().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.VsccEnvelope.e"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.VsccEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.VsccEnvelope)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VsccEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.VsccEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sign_r = 1;
  if (this->sign_r().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign_r().data(), static_cast<int>(this->sign_r().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.sign_r");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sign_r(), output);
  }

  // string sign_s = 2;
  if (this->sign_s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign_s().data(), static_cast<int>(this->sign_s().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.sign_s");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sign_s(), output);
  }

  // string pk_x = 3;
  if (this->pk_x().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pk_x().data(), static_cast<int>(this->pk_x().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.pk_x");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pk_x(), output);
  }

  // string pk_y = 4;
  if (this->pk_y().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pk_y().data(), static_cast<int>(this->pk_y().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.pk_y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pk_y(), output);
  }

  // string e = 5;
  if (this->e().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e().data(), static_cast<int>(this->e().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.e");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->e(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.VsccEnvelope)
}

::google::protobuf::uint8* VsccEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protos.VsccEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sign_r = 1;
  if (this->sign_r().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign_r().data(), static_cast<int>(this->sign_r().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.sign_r");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sign_r(), target);
  }

  // string sign_s = 2;
  if (this->sign_s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign_s().data(), static_cast<int>(this->sign_s().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.sign_s");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sign_s(), target);
  }

  // string pk_x = 3;
  if (this->pk_x().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pk_x().data(), static_cast<int>(this->pk_x().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.pk_x");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pk_x(), target);
  }

  // string pk_y = 4;
  if (this->pk_y().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pk_y().data(), static_cast<int>(this->pk_y().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.pk_y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pk_y(), target);
  }

  // string e = 5;
  if (this->e().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e().data(), static_cast<int>(this->e().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.VsccEnvelope.e");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->e(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.VsccEnvelope)
  return target;
}

size_t VsccEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.VsccEnvelope)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sign_r = 1;
  if (this->sign_r().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign_r());
  }

  // string sign_s = 2;
  if (this->sign_s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign_s());
  }

  // string pk_x = 3;
  if (this->pk_x().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pk_x());
  }

  // string pk_y = 4;
  if (this->pk_y().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pk_y());
  }

  // string e = 5;
  if (this->e().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->e());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VsccEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.VsccEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const VsccEnvelope* source =
      ::google::protobuf::DynamicCastToGenerated<VsccEnvelope>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.VsccEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.VsccEnvelope)
    MergeFrom(*source);
  }
}

void VsccEnvelope::MergeFrom(const VsccEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.VsccEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sign_r().size() > 0) {

    sign_r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_r_);
  }
  if (from.sign_s().size() > 0) {

    sign_s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_s_);
  }
  if (from.pk_x().size() > 0) {

    pk_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_x_);
  }
  if (from.pk_y().size() > 0) {

    pk_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_y_);
  }
  if (from.e().size() > 0) {

    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
}

void VsccEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.VsccEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VsccEnvelope::CopyFrom(const VsccEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.VsccEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VsccEnvelope::IsInitialized() const {
  return true;
}

void VsccEnvelope::Swap(VsccEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VsccEnvelope::InternalSwap(VsccEnvelope* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  sign_r_.Swap(&other->sign_r_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_s_.Swap(&other->sign_s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pk_x_.Swap(&other->pk_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pk_y_.Swap(&other->pk_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  e_.Swap(&other->e_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata VsccEnvelope::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_fpga_2eproto);
  return ::file_level_metadata_fpga_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VsccResponse::InitAsDefaultInstance() {
}
class VsccResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VsccResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VsccResponse::VsccResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.VsccResponse)
}
VsccResponse::VsccResponse(const VsccResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:protos.VsccResponse)
}

void VsccResponse::SharedCtor() {
  result_ = false;
}

VsccResponse::~VsccResponse() {
  // @@protoc_insertion_point(destructor:protos.VsccResponse)
  SharedDtor();
}

void VsccResponse::SharedDtor() {
}

void VsccResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VsccResponse& VsccResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VsccResponse_fpga_2eproto.base);
  return *internal_default_instance();
}


void VsccResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.VsccResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VsccResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VsccResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        bool value = val;
        msg->set_result(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VsccResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.VsccResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.VsccResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.VsccResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VsccResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.VsccResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.VsccResponse)
}

::google::protobuf::uint8* VsccResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protos.VsccResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.VsccResponse)
  return target;
}

size_t VsccResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.VsccResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VsccResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.VsccResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VsccResponse* source =
      ::google::protobuf::DynamicCastToGenerated<VsccResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.VsccResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.VsccResponse)
    MergeFrom(*source);
  }
}

void VsccResponse::MergeFrom(const VsccResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.VsccResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void VsccResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.VsccResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VsccResponse::CopyFrom(const VsccResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.VsccResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VsccResponse::IsInitialized() const {
  return true;
}

void VsccResponse::Swap(VsccResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VsccResponse::InternalSwap(VsccResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::google::protobuf::Metadata VsccResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_fpga_2eproto);
  return ::file_level_metadata_fpga_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Block4mvcc::InitAsDefaultInstance() {
}
class Block4mvcc::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block4mvcc::kNumFieldNumber;
const int Block4mvcc::kTxsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block4mvcc::Block4mvcc()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.Block4mvcc)
}
Block4mvcc::Block4mvcc(const Block4mvcc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      txs_(from.txs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:protos.Block4mvcc)
}

void Block4mvcc::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Block4mvcc_fpga_2eproto.base);
  num_ = PROTOBUF_ULONGLONG(0);
}

Block4mvcc::~Block4mvcc() {
  // @@protoc_insertion_point(destructor:protos.Block4mvcc)
  SharedDtor();
}

void Block4mvcc::SharedDtor() {
}

void Block4mvcc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Block4mvcc& Block4mvcc::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Block4mvcc_fpga_2eproto.base);
  return *internal_default_instance();
}


void Block4mvcc::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.Block4mvcc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txs_.Clear();
  num_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Block4mvcc::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Block4mvcc*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 num = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint64 value = val;
        msg->set_num(value);
        break;
      }
      // repeated .protos.Transaction4mvcc txs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::protos::Transaction4mvcc::_InternalParse;
          object = msg->add_txs();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Block4mvcc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.Block4mvcc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protos.Transaction4mvcc txs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_txs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.Block4mvcc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.Block4mvcc)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Block4mvcc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.Block4mvcc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->num(), output);
  }

  // repeated .protos.Transaction4mvcc txs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->txs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.Block4mvcc)
}

::google::protobuf::uint8* Block4mvcc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protos.Block4mvcc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->num(), target);
  }

  // repeated .protos.Transaction4mvcc txs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->txs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.Block4mvcc)
  return target;
}

size_t Block4mvcc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.Block4mvcc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protos.Transaction4mvcc txs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->txs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txs(static_cast<int>(i)));
    }
  }

  // uint64 num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Block4mvcc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.Block4mvcc)
  GOOGLE_DCHECK_NE(&from, this);
  const Block4mvcc* source =
      ::google::protobuf::DynamicCastToGenerated<Block4mvcc>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.Block4mvcc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.Block4mvcc)
    MergeFrom(*source);
  }
}

void Block4mvcc::MergeFrom(const Block4mvcc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.Block4mvcc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txs_.MergeFrom(from.txs_);
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void Block4mvcc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.Block4mvcc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block4mvcc::CopyFrom(const Block4mvcc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.Block4mvcc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block4mvcc::IsInitialized() const {
  return true;
}

void Block4mvcc::Swap(Block4mvcc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block4mvcc::InternalSwap(Block4mvcc* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&txs_)->InternalSwap(CastToBase(&other->txs_));
  swap(num_, other->num_);
}

::google::protobuf::Metadata Block4mvcc::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_fpga_2eproto);
  return ::file_level_metadata_fpga_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Transaction4mvcc::InitAsDefaultInstance() {
}
class Transaction4mvcc::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction4mvcc::kIndexInBlockFieldNumber;
const int Transaction4mvcc::kIdFieldNumber;
const int Transaction4mvcc::kRdCountFieldNumber;
const int Transaction4mvcc::kWtCountFieldNumber;
const int Transaction4mvcc::kRsFieldNumber;
const int Transaction4mvcc::kWsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction4mvcc::Transaction4mvcc()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.Transaction4mvcc)
}
Transaction4mvcc::Transaction4mvcc(const Transaction4mvcc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      rs_(from.rs_),
      ws_(from.ws_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&index_in_block_, &from.index_in_block_,
    static_cast<size_t>(reinterpret_cast<char*>(&wt_count_) -
    reinterpret_cast<char*>(&index_in_block_)) + sizeof(wt_count_));
  // @@protoc_insertion_point(copy_constructor:protos.Transaction4mvcc)
}

void Transaction4mvcc::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Transaction4mvcc_fpga_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_in_block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wt_count_) -
      reinterpret_cast<char*>(&index_in_block_)) + sizeof(wt_count_));
}

Transaction4mvcc::~Transaction4mvcc() {
  // @@protoc_insertion_point(destructor:protos.Transaction4mvcc)
  SharedDtor();
}

void Transaction4mvcc::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Transaction4mvcc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Transaction4mvcc& Transaction4mvcc::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Transaction4mvcc_fpga_2eproto.base);
  return *internal_default_instance();
}


void Transaction4mvcc::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.Transaction4mvcc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rs_.Clear();
  ws_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_in_block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wt_count_) -
      reinterpret_cast<char*>(&index_in_block_)) + sizeof(wt_count_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Transaction4mvcc::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Transaction4mvcc*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 index_in_block = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_index_in_block(value);
        break;
      }
      // string id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.Transaction4mvcc.id");
        auto str = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 rd_count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint32 value = val;
        msg->set_rd_count(value);
        break;
      }
      // uint32 wt_count = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint32 value = val;
        msg->set_wt_count(value);
        break;
      }
      // repeated .protos.TxRS rs = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::protos::TxRS::_InternalParse;
          object = msg->add_rs();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated .protos.TxWS ws = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::protos::TxWS::_InternalParse;
          object = msg->add_ws();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Transaction4mvcc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.Transaction4mvcc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index_in_block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_in_block_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.Transaction4mvcc.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rd_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rd_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 wt_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wt_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protos.TxRS rs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protos.TxWS ws = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ws()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.Transaction4mvcc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.Transaction4mvcc)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Transaction4mvcc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.Transaction4mvcc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index_in_block = 1;
  if (this->index_in_block() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index_in_block(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.Transaction4mvcc.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // uint32 rd_count = 3;
  if (this->rd_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rd_count(), output);
  }

  // uint32 wt_count = 4;
  if (this->wt_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->wt_count(), output);
  }

  // repeated .protos.TxRS rs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->rs(static_cast<int>(i)),
      output);
  }

  // repeated .protos.TxWS ws = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ws_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->ws(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.Transaction4mvcc)
}

::google::protobuf::uint8* Transaction4mvcc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protos.Transaction4mvcc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index_in_block = 1;
  if (this->index_in_block() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index_in_block(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.Transaction4mvcc.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // uint32 rd_count = 3;
  if (this->rd_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rd_count(), target);
  }

  // uint32 wt_count = 4;
  if (this->wt_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->wt_count(), target);
  }

  // repeated .protos.TxRS rs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->rs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protos.TxWS ws = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ws_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->ws(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.Transaction4mvcc)
  return target;
}

size_t Transaction4mvcc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.Transaction4mvcc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protos.TxRS rs = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->rs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rs(static_cast<int>(i)));
    }
  }

  // repeated .protos.TxWS ws = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->ws_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ws(static_cast<int>(i)));
    }
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // int32 index_in_block = 1;
  if (this->index_in_block() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index_in_block());
  }

  // uint32 rd_count = 3;
  if (this->rd_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rd_count());
  }

  // uint32 wt_count = 4;
  if (this->wt_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wt_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transaction4mvcc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.Transaction4mvcc)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction4mvcc* source =
      ::google::protobuf::DynamicCastToGenerated<Transaction4mvcc>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.Transaction4mvcc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.Transaction4mvcc)
    MergeFrom(*source);
  }
}

void Transaction4mvcc::MergeFrom(const Transaction4mvcc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.Transaction4mvcc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rs_.MergeFrom(from.rs_);
  ws_.MergeFrom(from.ws_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.index_in_block() != 0) {
    set_index_in_block(from.index_in_block());
  }
  if (from.rd_count() != 0) {
    set_rd_count(from.rd_count());
  }
  if (from.wt_count() != 0) {
    set_wt_count(from.wt_count());
  }
}

void Transaction4mvcc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.Transaction4mvcc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction4mvcc::CopyFrom(const Transaction4mvcc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.Transaction4mvcc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction4mvcc::IsInitialized() const {
  return true;
}

void Transaction4mvcc::Swap(Transaction4mvcc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction4mvcc::InternalSwap(Transaction4mvcc* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&rs_)->InternalSwap(CastToBase(&other->rs_));
  CastToBase(&ws_)->InternalSwap(CastToBase(&other->ws_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_in_block_, other->index_in_block_);
  swap(rd_count_, other->rd_count_);
  swap(wt_count_, other->wt_count_);
}

::google::protobuf::Metadata Transaction4mvcc::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_fpga_2eproto);
  return ::file_level_metadata_fpga_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TxRS::InitAsDefaultInstance() {
  ::protos::_TxRS_default_instance_._instance.get_mutable()->version_ = const_cast< ::kvrwset::Version*>(
      ::kvrwset::Version::internal_default_instance());
}
class TxRS::HasBitSetters {
 public:
  static const ::kvrwset::Version& version(const TxRS* msg);
};

const ::kvrwset::Version&
TxRS::HasBitSetters::version(const TxRS* msg) {
  return *msg->version_;
}
void TxRS::clear_version() {
  if (GetArenaNoVirtual() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxRS::kKeyFieldNumber;
const int TxRS::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxRS::TxRS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.TxRS)
}
TxRS::TxRS(const TxRS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_version()) {
    version_ = new ::kvrwset::Version(*from.version_);
  } else {
    version_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.TxRS)
}

void TxRS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TxRS_fpga_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = nullptr;
}

TxRS::~TxRS() {
  // @@protoc_insertion_point(destructor:protos.TxRS)
  SharedDtor();
}

void TxRS::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete version_;
}

void TxRS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TxRS& TxRS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TxRS_fpga_2eproto.base);
  return *internal_default_instance();
}


void TxRS::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.TxRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TxRS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TxRS*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.TxRS.key");
        auto str = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .kvrwset.Version version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kvrwset::Version::_InternalParse;
        object = msg->mutable_version();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TxRS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.TxRS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.TxRS.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrwset.Version version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.TxRS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.TxRS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TxRS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.TxRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.TxRS.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // .kvrwset.Version version = 2;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::version(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.TxRS)
}

::google::protobuf::uint8* TxRS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protos.TxRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.TxRS.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // .kvrwset.Version version = 2;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::version(this), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.TxRS)
  return target;
}

size_t TxRS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.TxRS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // .kvrwset.Version version = 2;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TxRS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.TxRS)
  GOOGLE_DCHECK_NE(&from, this);
  const TxRS* source =
      ::google::protobuf::DynamicCastToGenerated<TxRS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.TxRS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.TxRS)
    MergeFrom(*source);
  }
}

void TxRS::MergeFrom(const TxRS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.TxRS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_version()) {
    mutable_version()->::kvrwset::Version::MergeFrom(from.version());
  }
}

void TxRS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.TxRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxRS::CopyFrom(const TxRS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.TxRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxRS::IsInitialized() const {
  return true;
}

void TxRS::Swap(TxRS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxRS::InternalSwap(TxRS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
}

::google::protobuf::Metadata TxRS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_fpga_2eproto);
  return ::file_level_metadata_fpga_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TxWS::InitAsDefaultInstance() {
}
class TxWS::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxWS::kKeyFieldNumber;
const int TxWS::kValueFieldNumber;
const int TxWS::kIsDelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxWS::TxWS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.TxWS)
}
TxWS::TxWS(const TxWS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  is_del_ = from.is_del_;
  // @@protoc_insertion_point(copy_constructor:protos.TxWS)
}

void TxWS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TxWS_fpga_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_del_ = false;
}

TxWS::~TxWS() {
  // @@protoc_insertion_point(destructor:protos.TxWS)
  SharedDtor();
}

void TxWS::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxWS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TxWS& TxWS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TxWS_fpga_2eproto.base);
  return *internal_default_instance();
}


void TxWS::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.TxWS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_del_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TxWS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TxWS*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.TxWS.key");
        auto str = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        auto str = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool is_del = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        bool value = val;
        msg->set_is_del(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TxWS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.TxWS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.TxWS.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_del = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_del_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.TxWS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.TxWS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TxWS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.TxWS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.TxWS.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // bool is_del = 3;
  if (this->is_del() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_del(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.TxWS)
}

::google::protobuf::uint8* TxWS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protos.TxWS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.TxWS.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // bool is_del = 3;
  if (this->is_del() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_del(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.TxWS)
  return target;
}

size_t TxWS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.TxWS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // bool is_del = 3;
  if (this->is_del() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TxWS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.TxWS)
  GOOGLE_DCHECK_NE(&from, this);
  const TxWS* source =
      ::google::protobuf::DynamicCastToGenerated<TxWS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.TxWS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.TxWS)
    MergeFrom(*source);
  }
}

void TxWS::MergeFrom(const TxWS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.TxWS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.is_del() != 0) {
    set_is_del(from.is_del());
  }
}

void TxWS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.TxWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxWS::CopyFrom(const TxWS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.TxWS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxWS::IsInitialized() const {
  return true;
}

void TxWS::Swap(TxWS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxWS::InternalSwap(TxWS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_del_, other->is_del_);
}

::google::protobuf::Metadata TxWS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_fpga_2eproto);
  return ::file_level_metadata_fpga_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MvccResponse::InitAsDefaultInstance() {
}
class MvccResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MvccResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MvccResponse::MvccResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.MvccResponse)
}
MvccResponse::MvccResponse(const MvccResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:protos.MvccResponse)
}

void MvccResponse::SharedCtor() {
  result_ = false;
}

MvccResponse::~MvccResponse() {
  // @@protoc_insertion_point(destructor:protos.MvccResponse)
  SharedDtor();
}

void MvccResponse::SharedDtor() {
}

void MvccResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MvccResponse& MvccResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MvccResponse_fpga_2eproto.base);
  return *internal_default_instance();
}


void MvccResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.MvccResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MvccResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MvccResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        bool value = val;
        msg->set_result(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MvccResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.MvccResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.MvccResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.MvccResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MvccResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.MvccResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.MvccResponse)
}

::google::protobuf::uint8* MvccResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protos.MvccResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.MvccResponse)
  return target;
}

size_t MvccResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.MvccResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvccResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.MvccResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MvccResponse* source =
      ::google::protobuf::DynamicCastToGenerated<MvccResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.MvccResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.MvccResponse)
    MergeFrom(*source);
  }
}

void MvccResponse::MergeFrom(const MvccResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.MvccResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void MvccResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.MvccResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvccResponse::CopyFrom(const MvccResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.MvccResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvccResponse::IsInitialized() const {
  return true;
}

void MvccResponse::Swap(MvccResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MvccResponse::InternalSwap(MvccResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::google::protobuf::Metadata MvccResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_fpga_2eproto);
  return ::file_level_metadata_fpga_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::protos::VsccEnvelope* Arena::CreateMaybeMessage< ::protos::VsccEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::protos::VsccEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::VsccResponse* Arena::CreateMaybeMessage< ::protos::VsccResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protos::VsccResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::Block4mvcc* Arena::CreateMaybeMessage< ::protos::Block4mvcc >(Arena* arena) {
  return Arena::CreateInternal< ::protos::Block4mvcc >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::Transaction4mvcc* Arena::CreateMaybeMessage< ::protos::Transaction4mvcc >(Arena* arena) {
  return Arena::CreateInternal< ::protos::Transaction4mvcc >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::TxRS* Arena::CreateMaybeMessage< ::protos::TxRS >(Arena* arena) {
  return Arena::CreateInternal< ::protos::TxRS >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::TxWS* Arena::CreateMaybeMessage< ::protos::TxWS >(Arena* arena) {
  return Arena::CreateInternal< ::protos::TxWS >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::MvccResponse* Arena::CreateMaybeMessage< ::protos::MvccResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protos::MvccResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
