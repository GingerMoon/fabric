// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fpga/block_rpc.proto

package fpga

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request containing the block struct.
type BlockRequest struct {
	BlockId              uint64                      `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	ColdStart            bool                        `protobuf:"varint,2,opt,name=cold_start,json=coldStart,proto3" json:"cold_start,omitempty"`
	TxCount              uint32                      `protobuf:"varint,3,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	Tx                   []*BlockRequest_Transaction `protobuf:"bytes,4,rep,name=tx,proto3" json:"tx,omitempty"`
	Crc                  uint32                      `protobuf:"varint,5,opt,name=crc,proto3" json:"crc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_307fe3136a2eb14d, []int{0}
}

func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (m *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(m, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

func (m *BlockRequest) GetBlockId() uint64 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

func (m *BlockRequest) GetColdStart() bool {
	if m != nil {
		return m.ColdStart
	}
	return false
}

func (m *BlockRequest) GetTxCount() uint32 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func (m *BlockRequest) GetTx() []*BlockRequest_Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *BlockRequest) GetCrc() uint32 {
	if m != nil {
		return m.Crc
	}
	return 0
}

// transaction
type BlockRequest_Transaction struct {
	TxId                 string                                      `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	IndexInBlock         uint32                                      `protobuf:"varint,2,opt,name=indexInBlock,proto3" json:"indexInBlock,omitempty"`
	RdCount              uint32                                      `protobuf:"varint,3,opt,name=rd_count,json=rdCount,proto3" json:"rd_count,omitempty"`
	WtCount              uint32                                      `protobuf:"varint,4,opt,name=wt_count,json=wtCount,proto3" json:"wt_count,omitempty"`
	SgCount              uint32                                      `protobuf:"varint,5,opt,name=sg_count,json=sgCount,proto3" json:"sg_count,omitempty"`
	DbgTxValid           bool                                        `protobuf:"varint,6,opt,name=dbg_tx_valid,json=dbgTxValid,proto3" json:"dbg_tx_valid,omitempty"`
	Signatures           []*BlockRequest_Transaction_SignatureStruct `protobuf:"bytes,7,rep,name=signatures,proto3" json:"signatures,omitempty"`
	Reads                []*BlockRequest_Transaction_ReadStruct      `protobuf:"bytes,8,rep,name=reads,proto3" json:"reads,omitempty"`
	Writes               []*BlockRequest_Transaction_WriteStruct     `protobuf:"bytes,9,rep,name=writes,proto3" json:"writes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *BlockRequest_Transaction) Reset()         { *m = BlockRequest_Transaction{} }
func (m *BlockRequest_Transaction) String() string { return proto.CompactTextString(m) }
func (*BlockRequest_Transaction) ProtoMessage()    {}
func (*BlockRequest_Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_307fe3136a2eb14d, []int{0, 0}
}

func (m *BlockRequest_Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest_Transaction.Unmarshal(m, b)
}
func (m *BlockRequest_Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest_Transaction.Marshal(b, m, deterministic)
}
func (m *BlockRequest_Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest_Transaction.Merge(m, src)
}
func (m *BlockRequest_Transaction) XXX_Size() int {
	return xxx_messageInfo_BlockRequest_Transaction.Size(m)
}
func (m *BlockRequest_Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest_Transaction proto.InternalMessageInfo

func (m *BlockRequest_Transaction) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *BlockRequest_Transaction) GetIndexInBlock() uint32 {
	if m != nil {
		return m.IndexInBlock
	}
	return 0
}

func (m *BlockRequest_Transaction) GetRdCount() uint32 {
	if m != nil {
		return m.RdCount
	}
	return 0
}

func (m *BlockRequest_Transaction) GetWtCount() uint32 {
	if m != nil {
		return m.WtCount
	}
	return 0
}

func (m *BlockRequest_Transaction) GetSgCount() uint32 {
	if m != nil {
		return m.SgCount
	}
	return 0
}

func (m *BlockRequest_Transaction) GetDbgTxValid() bool {
	if m != nil {
		return m.DbgTxValid
	}
	return false
}

func (m *BlockRequest_Transaction) GetSignatures() []*BlockRequest_Transaction_SignatureStruct {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func (m *BlockRequest_Transaction) GetReads() []*BlockRequest_Transaction_ReadStruct {
	if m != nil {
		return m.Reads
	}
	return nil
}

func (m *BlockRequest_Transaction) GetWrites() []*BlockRequest_Transaction_WriteStruct {
	if m != nil {
		return m.Writes
	}
	return nil
}

type BlockRequest_Transaction_SignatureStruct struct {
	SignR                []byte   `protobuf:"bytes,1,opt,name=sign_r,json=signR,proto3" json:"sign_r,omitempty"`
	SignW                []byte   `protobuf:"bytes,2,opt,name=sign_w,json=signW,proto3" json:"sign_w,omitempty"`
	PkX                  []byte   `protobuf:"bytes,3,opt,name=pk_x,json=pkX,proto3" json:"pk_x,omitempty"`
	PkY                  []byte   `protobuf:"bytes,4,opt,name=pk_y,json=pkY,proto3" json:"pk_y,omitempty"`
	E                    []byte   `protobuf:"bytes,5,opt,name=e,proto3" json:"e,omitempty"`
	DbgSgValid           bool     `protobuf:"varint,6,opt,name=dbg_sg_valid,json=dbgSgValid,proto3" json:"dbg_sg_valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest_Transaction_SignatureStruct) Reset() {
	*m = BlockRequest_Transaction_SignatureStruct{}
}
func (m *BlockRequest_Transaction_SignatureStruct) String() string { return proto.CompactTextString(m) }
func (*BlockRequest_Transaction_SignatureStruct) ProtoMessage()    {}
func (*BlockRequest_Transaction_SignatureStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_307fe3136a2eb14d, []int{0, 0, 0}
}

func (m *BlockRequest_Transaction_SignatureStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest_Transaction_SignatureStruct.Unmarshal(m, b)
}
func (m *BlockRequest_Transaction_SignatureStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest_Transaction_SignatureStruct.Marshal(b, m, deterministic)
}
func (m *BlockRequest_Transaction_SignatureStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest_Transaction_SignatureStruct.Merge(m, src)
}
func (m *BlockRequest_Transaction_SignatureStruct) XXX_Size() int {
	return xxx_messageInfo_BlockRequest_Transaction_SignatureStruct.Size(m)
}
func (m *BlockRequest_Transaction_SignatureStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest_Transaction_SignatureStruct.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest_Transaction_SignatureStruct proto.InternalMessageInfo

func (m *BlockRequest_Transaction_SignatureStruct) GetSignR() []byte {
	if m != nil {
		return m.SignR
	}
	return nil
}

func (m *BlockRequest_Transaction_SignatureStruct) GetSignW() []byte {
	if m != nil {
		return m.SignW
	}
	return nil
}

func (m *BlockRequest_Transaction_SignatureStruct) GetPkX() []byte {
	if m != nil {
		return m.PkX
	}
	return nil
}

func (m *BlockRequest_Transaction_SignatureStruct) GetPkY() []byte {
	if m != nil {
		return m.PkY
	}
	return nil
}

func (m *BlockRequest_Transaction_SignatureStruct) GetE() []byte {
	if m != nil {
		return m.E
	}
	return nil
}

func (m *BlockRequest_Transaction_SignatureStruct) GetDbgSgValid() bool {
	if m != nil {
		return m.DbgSgValid
	}
	return false
}

type BlockRequest_Transaction_ReadStruct struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Version              []byte   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	DbgVal               string   `protobuf:"bytes,3,opt,name=dbg_val,json=dbgVal,proto3" json:"dbg_val,omitempty"`
	DbgIsDel             bool     `protobuf:"varint,4,opt,name=dbg_is_del,json=dbgIsDel,proto3" json:"dbg_is_del,omitempty"`
	DbgRdValid           bool     `protobuf:"varint,5,opt,name=dbg_rd_valid,json=dbgRdValid,proto3" json:"dbg_rd_valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest_Transaction_ReadStruct) Reset()         { *m = BlockRequest_Transaction_ReadStruct{} }
func (m *BlockRequest_Transaction_ReadStruct) String() string { return proto.CompactTextString(m) }
func (*BlockRequest_Transaction_ReadStruct) ProtoMessage()    {}
func (*BlockRequest_Transaction_ReadStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_307fe3136a2eb14d, []int{0, 0, 1}
}

func (m *BlockRequest_Transaction_ReadStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest_Transaction_ReadStruct.Unmarshal(m, b)
}
func (m *BlockRequest_Transaction_ReadStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest_Transaction_ReadStruct.Marshal(b, m, deterministic)
}
func (m *BlockRequest_Transaction_ReadStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest_Transaction_ReadStruct.Merge(m, src)
}
func (m *BlockRequest_Transaction_ReadStruct) XXX_Size() int {
	return xxx_messageInfo_BlockRequest_Transaction_ReadStruct.Size(m)
}
func (m *BlockRequest_Transaction_ReadStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest_Transaction_ReadStruct.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest_Transaction_ReadStruct proto.InternalMessageInfo

func (m *BlockRequest_Transaction_ReadStruct) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BlockRequest_Transaction_ReadStruct) GetVersion() []byte {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *BlockRequest_Transaction_ReadStruct) GetDbgVal() string {
	if m != nil {
		return m.DbgVal
	}
	return ""
}

func (m *BlockRequest_Transaction_ReadStruct) GetDbgIsDel() bool {
	if m != nil {
		return m.DbgIsDel
	}
	return false
}

func (m *BlockRequest_Transaction_ReadStruct) GetDbgRdValid() bool {
	if m != nil {
		return m.DbgRdValid
	}
	return false
}

type BlockRequest_Transaction_WriteStruct struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	IsDel                bool     `protobuf:"varint,3,opt,name=is_del,json=isDel,proto3" json:"is_del,omitempty"`
	CsVersion            []byte   `protobuf:"bytes,4,opt,name=cs_version,json=csVersion,proto3" json:"cs_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest_Transaction_WriteStruct) Reset()         { *m = BlockRequest_Transaction_WriteStruct{} }
func (m *BlockRequest_Transaction_WriteStruct) String() string { return proto.CompactTextString(m) }
func (*BlockRequest_Transaction_WriteStruct) ProtoMessage()    {}
func (*BlockRequest_Transaction_WriteStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_307fe3136a2eb14d, []int{0, 0, 2}
}

func (m *BlockRequest_Transaction_WriteStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest_Transaction_WriteStruct.Unmarshal(m, b)
}
func (m *BlockRequest_Transaction_WriteStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest_Transaction_WriteStruct.Marshal(b, m, deterministic)
}
func (m *BlockRequest_Transaction_WriteStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest_Transaction_WriteStruct.Merge(m, src)
}
func (m *BlockRequest_Transaction_WriteStruct) XXX_Size() int {
	return xxx_messageInfo_BlockRequest_Transaction_WriteStruct.Size(m)
}
func (m *BlockRequest_Transaction_WriteStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest_Transaction_WriteStruct.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest_Transaction_WriteStruct proto.InternalMessageInfo

func (m *BlockRequest_Transaction_WriteStruct) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BlockRequest_Transaction_WriteStruct) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *BlockRequest_Transaction_WriteStruct) GetIsDel() bool {
	if m != nil {
		return m.IsDel
	}
	return false
}

func (m *BlockRequest_Transaction_WriteStruct) GetCsVersion() []byte {
	if m != nil {
		return m.CsVersion
	}
	return nil
}

// The response containing the true or false Boolean value.
type BlockReply struct {
	BlockId              uint64                `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	TxReplies            []*BlockReply_TXReply `protobuf:"bytes,2,rep,name=tx_replies,json=txReplies,proto3" json:"tx_replies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BlockReply) Reset()         { *m = BlockReply{} }
func (m *BlockReply) String() string { return proto.CompactTextString(m) }
func (*BlockReply) ProtoMessage()    {}
func (*BlockReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_307fe3136a2eb14d, []int{1}
}

func (m *BlockReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReply.Unmarshal(m, b)
}
func (m *BlockReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReply.Marshal(b, m, deterministic)
}
func (m *BlockReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReply.Merge(m, src)
}
func (m *BlockReply) XXX_Size() int {
	return xxx_messageInfo_BlockReply.Size(m)
}
func (m *BlockReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReply.DiscardUnknown(m)
}

var xxx_messageInfo_BlockReply proto.InternalMessageInfo

func (m *BlockReply) GetBlockId() uint64 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

func (m *BlockReply) GetTxReplies() []*BlockReply_TXReply {
	if m != nil {
		return m.TxReplies
	}
	return nil
}

// transaction
type BlockReply_TXReply struct {
	TxId                 string                          `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	IndexInBlock         uint32                          `protobuf:"varint,2,opt,name=indexInBlock,proto3" json:"indexInBlock,omitempty"`
	TxValid              bool                            `protobuf:"varint,3,opt,name=tx_valid,json=txValid,proto3" json:"tx_valid,omitempty"`
	SgValid              bool                            `protobuf:"varint,4,opt,name=sg_valid,json=sgValid,proto3" json:"sg_valid,omitempty"`
	RdChecks             []*BlockReply_TXReply_ReadReply `protobuf:"bytes,5,rep,name=rd_checks,json=rdChecks,proto3" json:"rd_checks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *BlockReply_TXReply) Reset()         { *m = BlockReply_TXReply{} }
func (m *BlockReply_TXReply) String() string { return proto.CompactTextString(m) }
func (*BlockReply_TXReply) ProtoMessage()    {}
func (*BlockReply_TXReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_307fe3136a2eb14d, []int{1, 0}
}

func (m *BlockReply_TXReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReply_TXReply.Unmarshal(m, b)
}
func (m *BlockReply_TXReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReply_TXReply.Marshal(b, m, deterministic)
}
func (m *BlockReply_TXReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReply_TXReply.Merge(m, src)
}
func (m *BlockReply_TXReply) XXX_Size() int {
	return xxx_messageInfo_BlockReply_TXReply.Size(m)
}
func (m *BlockReply_TXReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReply_TXReply.DiscardUnknown(m)
}

var xxx_messageInfo_BlockReply_TXReply proto.InternalMessageInfo

func (m *BlockReply_TXReply) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *BlockReply_TXReply) GetIndexInBlock() uint32 {
	if m != nil {
		return m.IndexInBlock
	}
	return 0
}

func (m *BlockReply_TXReply) GetTxValid() bool {
	if m != nil {
		return m.TxValid
	}
	return false
}

func (m *BlockReply_TXReply) GetSgValid() bool {
	if m != nil {
		return m.SgValid
	}
	return false
}

func (m *BlockReply_TXReply) GetRdChecks() []*BlockReply_TXReply_ReadReply {
	if m != nil {
		return m.RdChecks
	}
	return nil
}

type BlockReply_TXReply_ReadReply struct {
	RdKey                string   `protobuf:"bytes,1,opt,name=rd_key,json=rdKey,proto3" json:"rd_key,omitempty"`
	RdValid              bool     `protobuf:"varint,2,opt,name=rd_valid,json=rdValid,proto3" json:"rd_valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockReply_TXReply_ReadReply) Reset()         { *m = BlockReply_TXReply_ReadReply{} }
func (m *BlockReply_TXReply_ReadReply) String() string { return proto.CompactTextString(m) }
func (*BlockReply_TXReply_ReadReply) ProtoMessage()    {}
func (*BlockReply_TXReply_ReadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_307fe3136a2eb14d, []int{1, 0, 0}
}

func (m *BlockReply_TXReply_ReadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReply_TXReply_ReadReply.Unmarshal(m, b)
}
func (m *BlockReply_TXReply_ReadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReply_TXReply_ReadReply.Marshal(b, m, deterministic)
}
func (m *BlockReply_TXReply_ReadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReply_TXReply_ReadReply.Merge(m, src)
}
func (m *BlockReply_TXReply_ReadReply) XXX_Size() int {
	return xxx_messageInfo_BlockReply_TXReply_ReadReply.Size(m)
}
func (m *BlockReply_TXReply_ReadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReply_TXReply_ReadReply.DiscardUnknown(m)
}

var xxx_messageInfo_BlockReply_TXReply_ReadReply proto.InternalMessageInfo

func (m *BlockReply_TXReply_ReadReply) GetRdKey() string {
	if m != nil {
		return m.RdKey
	}
	return ""
}

func (m *BlockReply_TXReply_ReadReply) GetRdValid() bool {
	if m != nil {
		return m.RdValid
	}
	return false
}

func init() {
	proto.RegisterType((*BlockRequest)(nil), "fpga.BlockRequest")
	proto.RegisterType((*BlockRequest_Transaction)(nil), "fpga.BlockRequest.Transaction")
	proto.RegisterType((*BlockRequest_Transaction_SignatureStruct)(nil), "fpga.BlockRequest.Transaction.SignatureStruct")
	proto.RegisterType((*BlockRequest_Transaction_ReadStruct)(nil), "fpga.BlockRequest.Transaction.ReadStruct")
	proto.RegisterType((*BlockRequest_Transaction_WriteStruct)(nil), "fpga.BlockRequest.Transaction.WriteStruct")
	proto.RegisterType((*BlockReply)(nil), "fpga.BlockReply")
	proto.RegisterType((*BlockReply_TXReply)(nil), "fpga.BlockReply.TXReply")
	proto.RegisterType((*BlockReply_TXReply_ReadReply)(nil), "fpga.BlockReply.TXReply.ReadReply")
}

func init() { proto.RegisterFile("fpga/block_rpc.proto", fileDescriptor_307fe3136a2eb14d) }

var fileDescriptor_307fe3136a2eb14d = []byte{
	// 686 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xc1, 0x6e, 0xdb, 0x38,
	0x10, 0x5d, 0xd9, 0x96, 0x25, 0x4d, 0x1c, 0x6c, 0x96, 0x9b, 0xc5, 0x2a, 0x46, 0x5b, 0x18, 0x3e,
	0xb9, 0x3d, 0xa8, 0x40, 0x7a, 0xc8, 0xa9, 0x08, 0x10, 0xe7, 0x62, 0x14, 0x28, 0x0a, 0x3a, 0x48,
	0xd2, 0x93, 0x20, 0x8b, 0xac, 0x2a, 0x58, 0x90, 0x55, 0x92, 0xb6, 0xe5, 0xcf, 0xe8, 0xa1, 0xdf,
	0xd0, 0xcf, 0xe9, 0x07, 0xf4, 0x47, 0x7a, 0x2c, 0x38, 0xa4, 0x1c, 0x27, 0x69, 0x93, 0x43, 0x4f,
	0xd2, 0xbc, 0x21, 0xdf, 0x3c, 0xbe, 0xe1, 0x10, 0x0e, 0x3f, 0x54, 0x59, 0xf2, 0x72, 0x56, 0x2c,
	0xd2, 0x79, 0x2c, 0xaa, 0x34, 0xaa, 0xc4, 0x42, 0x2d, 0x48, 0x47, 0xa3, 0xc3, 0x6f, 0x1e, 0xf4,
	0xce, 0x74, 0x86, 0xf2, 0x4f, 0x4b, 0x2e, 0x15, 0x39, 0x02, 0xdf, 0xac, 0xcc, 0x59, 0xe8, 0x0c,
	0x9c, 0x51, 0x87, 0x7a, 0x18, 0x4f, 0x18, 0x79, 0x0a, 0x90, 0x2e, 0x0a, 0x16, 0x4b, 0x95, 0x08,
	0x15, 0xb6, 0x06, 0xce, 0xc8, 0xa7, 0x81, 0x46, 0xa6, 0x1a, 0xd0, 0x3b, 0x55, 0x1d, 0xa7, 0x8b,
	0x65, 0xa9, 0xc2, 0xf6, 0xc0, 0x19, 0xed, 0x53, 0x4f, 0xd5, 0x63, 0x1d, 0x92, 0x08, 0x5a, 0xaa,
	0x0e, 0x3b, 0x83, 0xf6, 0x68, 0xef, 0xf8, 0x59, 0xa4, 0x0b, 0x47, 0xbb, 0x45, 0xa3, 0x0b, 0x91,
	0x94, 0x32, 0x49, 0x55, 0xbe, 0x28, 0x69, 0x4b, 0xd5, 0xe4, 0x00, 0xda, 0xa9, 0x48, 0x43, 0x17,
	0x59, 0xf4, 0x6f, 0xff, 0x6b, 0x17, 0xf6, 0x76, 0x56, 0x91, 0x7f, 0xc1, 0x55, 0x75, 0xa3, 0x31,
	0xa0, 0x1d, 0x55, 0x4f, 0x18, 0x19, 0x42, 0x2f, 0x2f, 0x19, 0xaf, 0x27, 0x25, 0xb2, 0xa3, 0xc4,
	0x7d, 0x7a, 0x0b, 0xd3, 0x2a, 0x05, 0xbb, 0xad, 0x52, 0x30, 0xa3, 0xf2, 0x08, 0xfc, 0xb5, 0xb2,
	0xa9, 0x8e, 0x49, 0xad, 0xd5, 0x36, 0x25, 0x33, 0x9b, 0x32, 0xaa, 0x3c, 0x99, 0x99, 0xd4, 0x00,
	0x7a, 0x6c, 0x96, 0xc5, 0xaa, 0x8e, 0x57, 0x49, 0x91, 0xb3, 0xb0, 0x8b, 0xbe, 0x00, 0x9b, 0x65,
	0x17, 0xf5, 0xa5, 0x46, 0xc8, 0x5b, 0x00, 0x99, 0x67, 0x65, 0xa2, 0x96, 0x82, 0xcb, 0xd0, 0x43,
	0x17, 0xa2, 0x87, 0x5d, 0x88, 0xa6, 0xcd, 0x86, 0xa9, 0x12, 0xcb, 0x54, 0xd1, 0x1d, 0x06, 0x72,
	0x0a, 0xae, 0xe0, 0x09, 0x93, 0xa1, 0x8f, 0x54, 0xcf, 0x1f, 0xa1, 0xa2, 0x3c, 0x61, 0x96, 0xc5,
	0xec, 0x23, 0x67, 0xd0, 0x5d, 0x8b, 0x5c, 0x71, 0x19, 0x06, 0xc8, 0xf0, 0xe2, 0x11, 0x86, 0x2b,
	0xbd, 0xd8, 0x52, 0xd8, 0x9d, 0xfd, 0x2f, 0x0e, 0xfc, 0x7d, 0x47, 0x24, 0xf9, 0x0f, 0xba, 0x5a,
	0x66, 0x2c, 0xb0, 0x2b, 0x3d, 0xea, 0xea, 0x88, 0x6e, 0xe1, 0x35, 0x36, 0xc4, 0xc2, 0x57, 0xe4,
	0x1f, 0xe8, 0x54, 0xf3, 0xb8, 0xc6, 0x2e, 0xf4, 0x68, 0xbb, 0x9a, 0x5f, 0x5b, 0x68, 0x83, 0xee,
	0x23, 0xf4, 0x9e, 0xf4, 0xc0, 0xe1, 0x68, 0x79, 0x8f, 0x3a, 0xbc, 0x31, 0x5b, 0x66, 0xf7, 0xcc,
	0x9e, 0x66, 0x68, 0x76, 0xff, 0xb3, 0x03, 0x70, 0x73, 0x62, 0x7d, 0x93, 0xe6, 0x7c, 0x63, 0x6f,
	0x89, 0xfe, 0x25, 0x21, 0x78, 0x2b, 0x2e, 0x64, 0xbe, 0x28, 0xad, 0x9c, 0x26, 0x24, 0xff, 0x83,
	0xa7, 0xc9, 0x57, 0x49, 0x81, 0x9a, 0x02, 0xda, 0x65, 0x33, 0xcd, 0x4a, 0x9e, 0x80, 0xae, 0x10,
	0xe7, 0x32, 0x66, 0xbc, 0x40, 0x71, 0x3e, 0xf5, 0xd9, 0x2c, 0x9b, 0xc8, 0x73, 0x5e, 0x34, 0x9a,
	0x04, 0xb3, 0x9a, 0xdc, 0xad, 0x26, 0xca, 0x8c, 0xa6, 0x39, 0xec, 0xed, 0x58, 0xf8, 0x0b, 0x4d,
	0x87, 0xe0, 0xae, 0x92, 0x62, 0xc9, 0x1b, 0x83, 0x30, 0xd0, 0xbe, 0xd9, 0x92, 0x6d, 0xa4, 0x74,
	0x73, 0xac, 0xa7, 0xc7, 0x50, 0xc6, 0xcd, 0x19, 0x8c, 0x55, 0x41, 0x2a, 0x2f, 0x0d, 0x30, 0xfc,
	0xde, 0x02, 0xb0, 0x9d, 0xac, 0x8a, 0xcd, 0x43, 0xf3, 0x7c, 0x02, 0xa0, 0xea, 0x58, 0xf0, 0xaa,
	0xc8, 0xb9, 0x0c, 0x5b, 0x78, 0x15, 0xc2, 0x5b, 0x57, 0xa1, 0x2a, 0x36, 0xd1, 0xc5, 0x35, 0x7e,
	0x69, 0xa0, 0x6a, 0x6a, 0x96, 0xf6, 0x7f, 0x38, 0xe0, 0x59, 0xf8, 0x8f, 0x06, 0x71, 0x3b, 0x33,
	0xe6, 0x7c, 0x9e, 0xb2, 0x03, 0x63, 0xa6, 0xcd, 0xa4, 0x8c, 0xdb, 0x9e, 0x34, 0xed, 0x25, 0xa7,
	0x10, 0xe8, 0xf1, 0xfd, 0xc8, 0xd3, 0xb9, 0x0c, 0x5d, 0x94, 0x3c, 0xfc, 0x9d, 0x64, 0xbc, 0xf9,
	0x46, 0xbc, 0x2f, 0xd8, 0x18, 0xf7, 0xf4, 0x5f, 0x43, 0xb0, 0x85, 0xb5, 0xc3, 0x82, 0xc5, 0x37,
	0xcd, 0x70, 0x05, 0x7b, 0xc3, 0x37, 0xf6, 0x8d, 0x30, 0xf5, 0xcd, 0x33, 0xe7, 0x09, 0xd3, 0xca,
	0xe3, 0x31, 0xf8, 0xa6, 0xd0, 0xbb, 0x31, 0x39, 0x81, 0xfd, 0x29, 0x2f, 0x19, 0xc6, 0xe7, 0x89,
	0x4a, 0x08, 0xb9, 0x3f, 0x47, 0xfd, 0x83, 0xbb, 0xea, 0x86, 0x7f, 0xcd, 0xba, 0xf8, 0x02, 0xbf,
	0xfa, 0x19, 0x00, 0x00, 0xff, 0xff, 0x85, 0x6d, 0x8e, 0x08, 0x99, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockRPCClient is the client API for BlockRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockRPCClient interface {
	// Sends a block
	SendBlockData(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error)
}

type blockRPCClient struct {
	cc *grpc.ClientConn
}

func NewBlockRPCClient(cc *grpc.ClientConn) BlockRPCClient {
	return &blockRPCClient{cc}
}

func (c *blockRPCClient) SendBlockData(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error) {
	out := new(BlockReply)
	err := c.cc.Invoke(ctx, "/fpga.BlockRPC/SendBlockData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockRPCServer is the server API for BlockRPC service.
type BlockRPCServer interface {
	// Sends a block
	SendBlockData(context.Context, *BlockRequest) (*BlockReply, error)
}

func RegisterBlockRPCServer(s *grpc.Server, srv BlockRPCServer) {
	s.RegisterService(&_BlockRPC_serviceDesc, srv)
}

func _BlockRPC_SendBlockData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockRPCServer).SendBlockData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fpga.BlockRPC/SendBlockData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockRPCServer).SendBlockData(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fpga.BlockRPC",
	HandlerType: (*BlockRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendBlockData",
			Handler:    _BlockRPC_SendBlockData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fpga/block_rpc.proto",
}
