// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fpga.proto

#ifndef PROTOBUF_INCLUDED_fpga_2eproto
#define PROTOBUF_INCLUDED_fpga_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "kv_rwset.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_fpga_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_fpga_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_fpga_2eproto();
namespace protos {
class Block4mvcc;
class Block4mvccDefaultTypeInternal;
extern Block4mvccDefaultTypeInternal _Block4mvcc_default_instance_;
class MvccResponse;
class MvccResponseDefaultTypeInternal;
extern MvccResponseDefaultTypeInternal _MvccResponse_default_instance_;
class Transaction4mvcc;
class Transaction4mvccDefaultTypeInternal;
extern Transaction4mvccDefaultTypeInternal _Transaction4mvcc_default_instance_;
class TxRS;
class TxRSDefaultTypeInternal;
extern TxRSDefaultTypeInternal _TxRS_default_instance_;
class TxWS;
class TxWSDefaultTypeInternal;
extern TxWSDefaultTypeInternal _TxWS_default_instance_;
class VsccEnvelope;
class VsccEnvelopeDefaultTypeInternal;
extern VsccEnvelopeDefaultTypeInternal _VsccEnvelope_default_instance_;
class VsccResponse;
class VsccResponseDefaultTypeInternal;
extern VsccResponseDefaultTypeInternal _VsccResponse_default_instance_;
}  // namespace protos
namespace google {
namespace protobuf {
template<> ::protos::Block4mvcc* Arena::CreateMaybeMessage<::protos::Block4mvcc>(Arena*);
template<> ::protos::MvccResponse* Arena::CreateMaybeMessage<::protos::MvccResponse>(Arena*);
template<> ::protos::Transaction4mvcc* Arena::CreateMaybeMessage<::protos::Transaction4mvcc>(Arena*);
template<> ::protos::TxRS* Arena::CreateMaybeMessage<::protos::TxRS>(Arena*);
template<> ::protos::TxWS* Arena::CreateMaybeMessage<::protos::TxWS>(Arena*);
template<> ::protos::VsccEnvelope* Arena::CreateMaybeMessage<::protos::VsccEnvelope>(Arena*);
template<> ::protos::VsccResponse* Arena::CreateMaybeMessage<::protos::VsccResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protos {

// ===================================================================

class VsccEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.VsccEnvelope) */ {
 public:
  VsccEnvelope();
  virtual ~VsccEnvelope();

  VsccEnvelope(const VsccEnvelope& from);

  inline VsccEnvelope& operator=(const VsccEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VsccEnvelope(VsccEnvelope&& from) noexcept
    : VsccEnvelope() {
    *this = ::std::move(from);
  }

  inline VsccEnvelope& operator=(VsccEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VsccEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VsccEnvelope* internal_default_instance() {
    return reinterpret_cast<const VsccEnvelope*>(
               &_VsccEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(VsccEnvelope* other);
  friend void swap(VsccEnvelope& a, VsccEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VsccEnvelope* New() const final {
    return CreateMaybeMessage<VsccEnvelope>(nullptr);
  }

  VsccEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VsccEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VsccEnvelope& from);
  void MergeFrom(const VsccEnvelope& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VsccEnvelope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sign_r = 1;
  void clear_sign_r();
  static const int kSignRFieldNumber = 1;
  const ::std::string& sign_r() const;
  void set_sign_r(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_r(::std::string&& value);
  #endif
  void set_sign_r(const char* value);
  void set_sign_r(const char* value, size_t size);
  ::std::string* mutable_sign_r();
  ::std::string* release_sign_r();
  void set_allocated_sign_r(::std::string* sign_r);

  // string sign_s = 2;
  void clear_sign_s();
  static const int kSignSFieldNumber = 2;
  const ::std::string& sign_s() const;
  void set_sign_s(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_s(::std::string&& value);
  #endif
  void set_sign_s(const char* value);
  void set_sign_s(const char* value, size_t size);
  ::std::string* mutable_sign_s();
  ::std::string* release_sign_s();
  void set_allocated_sign_s(::std::string* sign_s);

  // string pk_x = 3;
  void clear_pk_x();
  static const int kPkXFieldNumber = 3;
  const ::std::string& pk_x() const;
  void set_pk_x(const ::std::string& value);
  #if LANG_CXX11
  void set_pk_x(::std::string&& value);
  #endif
  void set_pk_x(const char* value);
  void set_pk_x(const char* value, size_t size);
  ::std::string* mutable_pk_x();
  ::std::string* release_pk_x();
  void set_allocated_pk_x(::std::string* pk_x);

  // string pk_y = 4;
  void clear_pk_y();
  static const int kPkYFieldNumber = 4;
  const ::std::string& pk_y() const;
  void set_pk_y(const ::std::string& value);
  #if LANG_CXX11
  void set_pk_y(::std::string&& value);
  #endif
  void set_pk_y(const char* value);
  void set_pk_y(const char* value, size_t size);
  ::std::string* mutable_pk_y();
  ::std::string* release_pk_y();
  void set_allocated_pk_y(::std::string* pk_y);

  // string e = 5;
  void clear_e();
  static const int kEFieldNumber = 5;
  const ::std::string& e() const;
  void set_e(const ::std::string& value);
  #if LANG_CXX11
  void set_e(::std::string&& value);
  #endif
  void set_e(const char* value);
  void set_e(const char* value, size_t size);
  ::std::string* mutable_e();
  ::std::string* release_e();
  void set_allocated_e(::std::string* e);

  // @@protoc_insertion_point(class_scope:protos.VsccEnvelope)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sign_r_;
  ::google::protobuf::internal::ArenaStringPtr sign_s_;
  ::google::protobuf::internal::ArenaStringPtr pk_x_;
  ::google::protobuf::internal::ArenaStringPtr pk_y_;
  ::google::protobuf::internal::ArenaStringPtr e_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fpga_2eproto;
};
// -------------------------------------------------------------------

class VsccResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.VsccResponse) */ {
 public:
  VsccResponse();
  virtual ~VsccResponse();

  VsccResponse(const VsccResponse& from);

  inline VsccResponse& operator=(const VsccResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VsccResponse(VsccResponse&& from) noexcept
    : VsccResponse() {
    *this = ::std::move(from);
  }

  inline VsccResponse& operator=(VsccResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VsccResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VsccResponse* internal_default_instance() {
    return reinterpret_cast<const VsccResponse*>(
               &_VsccResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(VsccResponse* other);
  friend void swap(VsccResponse& a, VsccResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VsccResponse* New() const final {
    return CreateMaybeMessage<VsccResponse>(nullptr);
  }

  VsccResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VsccResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VsccResponse& from);
  void MergeFrom(const VsccResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VsccResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:protos.VsccResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fpga_2eproto;
};
// -------------------------------------------------------------------

class Block4mvcc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.Block4mvcc) */ {
 public:
  Block4mvcc();
  virtual ~Block4mvcc();

  Block4mvcc(const Block4mvcc& from);

  inline Block4mvcc& operator=(const Block4mvcc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Block4mvcc(Block4mvcc&& from) noexcept
    : Block4mvcc() {
    *this = ::std::move(from);
  }

  inline Block4mvcc& operator=(Block4mvcc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Block4mvcc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Block4mvcc* internal_default_instance() {
    return reinterpret_cast<const Block4mvcc*>(
               &_Block4mvcc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Block4mvcc* other);
  friend void swap(Block4mvcc& a, Block4mvcc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Block4mvcc* New() const final {
    return CreateMaybeMessage<Block4mvcc>(nullptr);
  }

  Block4mvcc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Block4mvcc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Block4mvcc& from);
  void MergeFrom(const Block4mvcc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Block4mvcc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.Transaction4mvcc txs = 2;
  int txs_size() const;
  void clear_txs();
  static const int kTxsFieldNumber = 2;
  ::protos::Transaction4mvcc* mutable_txs(int index);
  ::google::protobuf::RepeatedPtrField< ::protos::Transaction4mvcc >*
      mutable_txs();
  const ::protos::Transaction4mvcc& txs(int index) const;
  ::protos::Transaction4mvcc* add_txs();
  const ::google::protobuf::RepeatedPtrField< ::protos::Transaction4mvcc >&
      txs() const;

  // uint64 num = 1;
  void clear_num();
  static const int kNumFieldNumber = 1;
  ::google::protobuf::uint64 num() const;
  void set_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protos.Block4mvcc)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protos::Transaction4mvcc > txs_;
  ::google::protobuf::uint64 num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fpga_2eproto;
};
// -------------------------------------------------------------------

class Transaction4mvcc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.Transaction4mvcc) */ {
 public:
  Transaction4mvcc();
  virtual ~Transaction4mvcc();

  Transaction4mvcc(const Transaction4mvcc& from);

  inline Transaction4mvcc& operator=(const Transaction4mvcc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Transaction4mvcc(Transaction4mvcc&& from) noexcept
    : Transaction4mvcc() {
    *this = ::std::move(from);
  }

  inline Transaction4mvcc& operator=(Transaction4mvcc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Transaction4mvcc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transaction4mvcc* internal_default_instance() {
    return reinterpret_cast<const Transaction4mvcc*>(
               &_Transaction4mvcc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Transaction4mvcc* other);
  friend void swap(Transaction4mvcc& a, Transaction4mvcc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Transaction4mvcc* New() const final {
    return CreateMaybeMessage<Transaction4mvcc>(nullptr);
  }

  Transaction4mvcc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Transaction4mvcc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Transaction4mvcc& from);
  void MergeFrom(const Transaction4mvcc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Transaction4mvcc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.TxRS rs = 5;
  int rs_size() const;
  void clear_rs();
  static const int kRsFieldNumber = 5;
  ::protos::TxRS* mutable_rs(int index);
  ::google::protobuf::RepeatedPtrField< ::protos::TxRS >*
      mutable_rs();
  const ::protos::TxRS& rs(int index) const;
  ::protos::TxRS* add_rs();
  const ::google::protobuf::RepeatedPtrField< ::protos::TxRS >&
      rs() const;

  // repeated .protos.TxWS ws = 6;
  int ws_size() const;
  void clear_ws();
  static const int kWsFieldNumber = 6;
  ::protos::TxWS* mutable_ws(int index);
  ::google::protobuf::RepeatedPtrField< ::protos::TxWS >*
      mutable_ws();
  const ::protos::TxWS& ws(int index) const;
  ::protos::TxWS* add_ws();
  const ::google::protobuf::RepeatedPtrField< ::protos::TxWS >&
      ws() const;

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // int32 index_in_block = 1;
  void clear_index_in_block();
  static const int kIndexInBlockFieldNumber = 1;
  ::google::protobuf::int32 index_in_block() const;
  void set_index_in_block(::google::protobuf::int32 value);

  // uint32 rd_count = 3;
  void clear_rd_count();
  static const int kRdCountFieldNumber = 3;
  ::google::protobuf::uint32 rd_count() const;
  void set_rd_count(::google::protobuf::uint32 value);

  // uint32 wt_count = 4;
  void clear_wt_count();
  static const int kWtCountFieldNumber = 4;
  ::google::protobuf::uint32 wt_count() const;
  void set_wt_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protos.Transaction4mvcc)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protos::TxRS > rs_;
  ::google::protobuf::RepeatedPtrField< ::protos::TxWS > ws_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 index_in_block_;
  ::google::protobuf::uint32 rd_count_;
  ::google::protobuf::uint32 wt_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fpga_2eproto;
};
// -------------------------------------------------------------------

class TxRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.TxRS) */ {
 public:
  TxRS();
  virtual ~TxRS();

  TxRS(const TxRS& from);

  inline TxRS& operator=(const TxRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TxRS(TxRS&& from) noexcept
    : TxRS() {
    *this = ::std::move(from);
  }

  inline TxRS& operator=(TxRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TxRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TxRS* internal_default_instance() {
    return reinterpret_cast<const TxRS*>(
               &_TxRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TxRS* other);
  friend void swap(TxRS& a, TxRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TxRS* New() const final {
    return CreateMaybeMessage<TxRS>(nullptr);
  }

  TxRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TxRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TxRS& from);
  void MergeFrom(const TxRS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TxRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .kvrwset.Version version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::kvrwset::Version& version() const;
  ::kvrwset::Version* release_version();
  ::kvrwset::Version* mutable_version();
  void set_allocated_version(::kvrwset::Version* version);

  // @@protoc_insertion_point(class_scope:protos.TxRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::kvrwset::Version* version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fpga_2eproto;
};
// -------------------------------------------------------------------

class TxWS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.TxWS) */ {
 public:
  TxWS();
  virtual ~TxWS();

  TxWS(const TxWS& from);

  inline TxWS& operator=(const TxWS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TxWS(TxWS&& from) noexcept
    : TxWS() {
    *this = ::std::move(from);
  }

  inline TxWS& operator=(TxWS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TxWS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TxWS* internal_default_instance() {
    return reinterpret_cast<const TxWS*>(
               &_TxWS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(TxWS* other);
  friend void swap(TxWS& a, TxWS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TxWS* New() const final {
    return CreateMaybeMessage<TxWS>(nullptr);
  }

  TxWS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TxWS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TxWS& from);
  void MergeFrom(const TxWS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TxWS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // bool is_del = 3;
  void clear_is_del();
  static const int kIsDelFieldNumber = 3;
  bool is_del() const;
  void set_is_del(bool value);

  // @@protoc_insertion_point(class_scope:protos.TxWS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  bool is_del_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fpga_2eproto;
};
// -------------------------------------------------------------------

class MvccResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.MvccResponse) */ {
 public:
  MvccResponse();
  virtual ~MvccResponse();

  MvccResponse(const MvccResponse& from);

  inline MvccResponse& operator=(const MvccResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MvccResponse(MvccResponse&& from) noexcept
    : MvccResponse() {
    *this = ::std::move(from);
  }

  inline MvccResponse& operator=(MvccResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MvccResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MvccResponse* internal_default_instance() {
    return reinterpret_cast<const MvccResponse*>(
               &_MvccResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MvccResponse* other);
  friend void swap(MvccResponse& a, MvccResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MvccResponse* New() const final {
    return CreateMaybeMessage<MvccResponse>(nullptr);
  }

  MvccResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MvccResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MvccResponse& from);
  void MergeFrom(const MvccResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MvccResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:protos.MvccResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fpga_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VsccEnvelope

// string sign_r = 1;
inline void VsccEnvelope::clear_sign_r() {
  sign_r_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VsccEnvelope::sign_r() const {
  // @@protoc_insertion_point(field_get:protos.VsccEnvelope.sign_r)
  return sign_r_.GetNoArena();
}
inline void VsccEnvelope::set_sign_r(const ::std::string& value) {
  
  sign_r_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.VsccEnvelope.sign_r)
}
#if LANG_CXX11
inline void VsccEnvelope::set_sign_r(::std::string&& value) {
  
  sign_r_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.VsccEnvelope.sign_r)
}
#endif
inline void VsccEnvelope::set_sign_r(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sign_r_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.VsccEnvelope.sign_r)
}
inline void VsccEnvelope::set_sign_r(const char* value, size_t size) {
  
  sign_r_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.VsccEnvelope.sign_r)
}
inline ::std::string* VsccEnvelope::mutable_sign_r() {
  
  // @@protoc_insertion_point(field_mutable:protos.VsccEnvelope.sign_r)
  return sign_r_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VsccEnvelope::release_sign_r() {
  // @@protoc_insertion_point(field_release:protos.VsccEnvelope.sign_r)
  
  return sign_r_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VsccEnvelope::set_allocated_sign_r(::std::string* sign_r) {
  if (sign_r != nullptr) {
    
  } else {
    
  }
  sign_r_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_r);
  // @@protoc_insertion_point(field_set_allocated:protos.VsccEnvelope.sign_r)
}

// string sign_s = 2;
inline void VsccEnvelope::clear_sign_s() {
  sign_s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VsccEnvelope::sign_s() const {
  // @@protoc_insertion_point(field_get:protos.VsccEnvelope.sign_s)
  return sign_s_.GetNoArena();
}
inline void VsccEnvelope::set_sign_s(const ::std::string& value) {
  
  sign_s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.VsccEnvelope.sign_s)
}
#if LANG_CXX11
inline void VsccEnvelope::set_sign_s(::std::string&& value) {
  
  sign_s_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.VsccEnvelope.sign_s)
}
#endif
inline void VsccEnvelope::set_sign_s(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sign_s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.VsccEnvelope.sign_s)
}
inline void VsccEnvelope::set_sign_s(const char* value, size_t size) {
  
  sign_s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.VsccEnvelope.sign_s)
}
inline ::std::string* VsccEnvelope::mutable_sign_s() {
  
  // @@protoc_insertion_point(field_mutable:protos.VsccEnvelope.sign_s)
  return sign_s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VsccEnvelope::release_sign_s() {
  // @@protoc_insertion_point(field_release:protos.VsccEnvelope.sign_s)
  
  return sign_s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VsccEnvelope::set_allocated_sign_s(::std::string* sign_s) {
  if (sign_s != nullptr) {
    
  } else {
    
  }
  sign_s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_s);
  // @@protoc_insertion_point(field_set_allocated:protos.VsccEnvelope.sign_s)
}

// string pk_x = 3;
inline void VsccEnvelope::clear_pk_x() {
  pk_x_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VsccEnvelope::pk_x() const {
  // @@protoc_insertion_point(field_get:protos.VsccEnvelope.pk_x)
  return pk_x_.GetNoArena();
}
inline void VsccEnvelope::set_pk_x(const ::std::string& value) {
  
  pk_x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.VsccEnvelope.pk_x)
}
#if LANG_CXX11
inline void VsccEnvelope::set_pk_x(::std::string&& value) {
  
  pk_x_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.VsccEnvelope.pk_x)
}
#endif
inline void VsccEnvelope::set_pk_x(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pk_x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.VsccEnvelope.pk_x)
}
inline void VsccEnvelope::set_pk_x(const char* value, size_t size) {
  
  pk_x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.VsccEnvelope.pk_x)
}
inline ::std::string* VsccEnvelope::mutable_pk_x() {
  
  // @@protoc_insertion_point(field_mutable:protos.VsccEnvelope.pk_x)
  return pk_x_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VsccEnvelope::release_pk_x() {
  // @@protoc_insertion_point(field_release:protos.VsccEnvelope.pk_x)
  
  return pk_x_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VsccEnvelope::set_allocated_pk_x(::std::string* pk_x) {
  if (pk_x != nullptr) {
    
  } else {
    
  }
  pk_x_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pk_x);
  // @@protoc_insertion_point(field_set_allocated:protos.VsccEnvelope.pk_x)
}

// string pk_y = 4;
inline void VsccEnvelope::clear_pk_y() {
  pk_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VsccEnvelope::pk_y() const {
  // @@protoc_insertion_point(field_get:protos.VsccEnvelope.pk_y)
  return pk_y_.GetNoArena();
}
inline void VsccEnvelope::set_pk_y(const ::std::string& value) {
  
  pk_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.VsccEnvelope.pk_y)
}
#if LANG_CXX11
inline void VsccEnvelope::set_pk_y(::std::string&& value) {
  
  pk_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.VsccEnvelope.pk_y)
}
#endif
inline void VsccEnvelope::set_pk_y(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pk_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.VsccEnvelope.pk_y)
}
inline void VsccEnvelope::set_pk_y(const char* value, size_t size) {
  
  pk_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.VsccEnvelope.pk_y)
}
inline ::std::string* VsccEnvelope::mutable_pk_y() {
  
  // @@protoc_insertion_point(field_mutable:protos.VsccEnvelope.pk_y)
  return pk_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VsccEnvelope::release_pk_y() {
  // @@protoc_insertion_point(field_release:protos.VsccEnvelope.pk_y)
  
  return pk_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VsccEnvelope::set_allocated_pk_y(::std::string* pk_y) {
  if (pk_y != nullptr) {
    
  } else {
    
  }
  pk_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pk_y);
  // @@protoc_insertion_point(field_set_allocated:protos.VsccEnvelope.pk_y)
}

// string e = 5;
inline void VsccEnvelope::clear_e() {
  e_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VsccEnvelope::e() const {
  // @@protoc_insertion_point(field_get:protos.VsccEnvelope.e)
  return e_.GetNoArena();
}
inline void VsccEnvelope::set_e(const ::std::string& value) {
  
  e_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.VsccEnvelope.e)
}
#if LANG_CXX11
inline void VsccEnvelope::set_e(::std::string&& value) {
  
  e_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.VsccEnvelope.e)
}
#endif
inline void VsccEnvelope::set_e(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  e_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.VsccEnvelope.e)
}
inline void VsccEnvelope::set_e(const char* value, size_t size) {
  
  e_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.VsccEnvelope.e)
}
inline ::std::string* VsccEnvelope::mutable_e() {
  
  // @@protoc_insertion_point(field_mutable:protos.VsccEnvelope.e)
  return e_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VsccEnvelope::release_e() {
  // @@protoc_insertion_point(field_release:protos.VsccEnvelope.e)
  
  return e_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VsccEnvelope::set_allocated_e(::std::string* e) {
  if (e != nullptr) {
    
  } else {
    
  }
  e_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), e);
  // @@protoc_insertion_point(field_set_allocated:protos.VsccEnvelope.e)
}

// -------------------------------------------------------------------

// VsccResponse

// bool result = 1;
inline void VsccResponse::clear_result() {
  result_ = false;
}
inline bool VsccResponse::result() const {
  // @@protoc_insertion_point(field_get:protos.VsccResponse.result)
  return result_;
}
inline void VsccResponse::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protos.VsccResponse.result)
}

// -------------------------------------------------------------------

// Block4mvcc

// uint64 num = 1;
inline void Block4mvcc::clear_num() {
  num_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Block4mvcc::num() const {
  // @@protoc_insertion_point(field_get:protos.Block4mvcc.num)
  return num_;
}
inline void Block4mvcc::set_num(::google::protobuf::uint64 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protos.Block4mvcc.num)
}

// repeated .protos.Transaction4mvcc txs = 2;
inline int Block4mvcc::txs_size() const {
  return txs_.size();
}
inline void Block4mvcc::clear_txs() {
  txs_.Clear();
}
inline ::protos::Transaction4mvcc* Block4mvcc::mutable_txs(int index) {
  // @@protoc_insertion_point(field_mutable:protos.Block4mvcc.txs)
  return txs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protos::Transaction4mvcc >*
Block4mvcc::mutable_txs() {
  // @@protoc_insertion_point(field_mutable_list:protos.Block4mvcc.txs)
  return &txs_;
}
inline const ::protos::Transaction4mvcc& Block4mvcc::txs(int index) const {
  // @@protoc_insertion_point(field_get:protos.Block4mvcc.txs)
  return txs_.Get(index);
}
inline ::protos::Transaction4mvcc* Block4mvcc::add_txs() {
  // @@protoc_insertion_point(field_add:protos.Block4mvcc.txs)
  return txs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::Transaction4mvcc >&
Block4mvcc::txs() const {
  // @@protoc_insertion_point(field_list:protos.Block4mvcc.txs)
  return txs_;
}

// -------------------------------------------------------------------

// Transaction4mvcc

// int32 index_in_block = 1;
inline void Transaction4mvcc::clear_index_in_block() {
  index_in_block_ = 0;
}
inline ::google::protobuf::int32 Transaction4mvcc::index_in_block() const {
  // @@protoc_insertion_point(field_get:protos.Transaction4mvcc.index_in_block)
  return index_in_block_;
}
inline void Transaction4mvcc::set_index_in_block(::google::protobuf::int32 value) {
  
  index_in_block_ = value;
  // @@protoc_insertion_point(field_set:protos.Transaction4mvcc.index_in_block)
}

// string id = 2;
inline void Transaction4mvcc::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Transaction4mvcc::id() const {
  // @@protoc_insertion_point(field_get:protos.Transaction4mvcc.id)
  return id_.GetNoArena();
}
inline void Transaction4mvcc::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.Transaction4mvcc.id)
}
#if LANG_CXX11
inline void Transaction4mvcc::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.Transaction4mvcc.id)
}
#endif
inline void Transaction4mvcc::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.Transaction4mvcc.id)
}
inline void Transaction4mvcc::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.Transaction4mvcc.id)
}
inline ::std::string* Transaction4mvcc::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:protos.Transaction4mvcc.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Transaction4mvcc::release_id() {
  // @@protoc_insertion_point(field_release:protos.Transaction4mvcc.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Transaction4mvcc::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:protos.Transaction4mvcc.id)
}

// uint32 rd_count = 3;
inline void Transaction4mvcc::clear_rd_count() {
  rd_count_ = 0u;
}
inline ::google::protobuf::uint32 Transaction4mvcc::rd_count() const {
  // @@protoc_insertion_point(field_get:protos.Transaction4mvcc.rd_count)
  return rd_count_;
}
inline void Transaction4mvcc::set_rd_count(::google::protobuf::uint32 value) {
  
  rd_count_ = value;
  // @@protoc_insertion_point(field_set:protos.Transaction4mvcc.rd_count)
}

// uint32 wt_count = 4;
inline void Transaction4mvcc::clear_wt_count() {
  wt_count_ = 0u;
}
inline ::google::protobuf::uint32 Transaction4mvcc::wt_count() const {
  // @@protoc_insertion_point(field_get:protos.Transaction4mvcc.wt_count)
  return wt_count_;
}
inline void Transaction4mvcc::set_wt_count(::google::protobuf::uint32 value) {
  
  wt_count_ = value;
  // @@protoc_insertion_point(field_set:protos.Transaction4mvcc.wt_count)
}

// repeated .protos.TxRS rs = 5;
inline int Transaction4mvcc::rs_size() const {
  return rs_.size();
}
inline void Transaction4mvcc::clear_rs() {
  rs_.Clear();
}
inline ::protos::TxRS* Transaction4mvcc::mutable_rs(int index) {
  // @@protoc_insertion_point(field_mutable:protos.Transaction4mvcc.rs)
  return rs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protos::TxRS >*
Transaction4mvcc::mutable_rs() {
  // @@protoc_insertion_point(field_mutable_list:protos.Transaction4mvcc.rs)
  return &rs_;
}
inline const ::protos::TxRS& Transaction4mvcc::rs(int index) const {
  // @@protoc_insertion_point(field_get:protos.Transaction4mvcc.rs)
  return rs_.Get(index);
}
inline ::protos::TxRS* Transaction4mvcc::add_rs() {
  // @@protoc_insertion_point(field_add:protos.Transaction4mvcc.rs)
  return rs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::TxRS >&
Transaction4mvcc::rs() const {
  // @@protoc_insertion_point(field_list:protos.Transaction4mvcc.rs)
  return rs_;
}

// repeated .protos.TxWS ws = 6;
inline int Transaction4mvcc::ws_size() const {
  return ws_.size();
}
inline void Transaction4mvcc::clear_ws() {
  ws_.Clear();
}
inline ::protos::TxWS* Transaction4mvcc::mutable_ws(int index) {
  // @@protoc_insertion_point(field_mutable:protos.Transaction4mvcc.ws)
  return ws_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protos::TxWS >*
Transaction4mvcc::mutable_ws() {
  // @@protoc_insertion_point(field_mutable_list:protos.Transaction4mvcc.ws)
  return &ws_;
}
inline const ::protos::TxWS& Transaction4mvcc::ws(int index) const {
  // @@protoc_insertion_point(field_get:protos.Transaction4mvcc.ws)
  return ws_.Get(index);
}
inline ::protos::TxWS* Transaction4mvcc::add_ws() {
  // @@protoc_insertion_point(field_add:protos.Transaction4mvcc.ws)
  return ws_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::TxWS >&
Transaction4mvcc::ws() const {
  // @@protoc_insertion_point(field_list:protos.Transaction4mvcc.ws)
  return ws_;
}

// -------------------------------------------------------------------

// TxRS

// string key = 1;
inline void TxRS::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TxRS::key() const {
  // @@protoc_insertion_point(field_get:protos.TxRS.key)
  return key_.GetNoArena();
}
inline void TxRS::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.TxRS.key)
}
#if LANG_CXX11
inline void TxRS::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.TxRS.key)
}
#endif
inline void TxRS::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.TxRS.key)
}
inline void TxRS::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.TxRS.key)
}
inline ::std::string* TxRS::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:protos.TxRS.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxRS::release_key() {
  // @@protoc_insertion_point(field_release:protos.TxRS.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxRS::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:protos.TxRS.key)
}

// .kvrwset.Version version = 2;
inline bool TxRS::has_version() const {
  return this != internal_default_instance() && version_ != nullptr;
}
inline const ::kvrwset::Version& TxRS::version() const {
  const ::kvrwset::Version* p = version_;
  // @@protoc_insertion_point(field_get:protos.TxRS.version)
  return p != nullptr ? *p : *reinterpret_cast<const ::kvrwset::Version*>(
      &::kvrwset::_Version_default_instance_);
}
inline ::kvrwset::Version* TxRS::release_version() {
  // @@protoc_insertion_point(field_release:protos.TxRS.version)
  
  ::kvrwset::Version* temp = version_;
  version_ = nullptr;
  return temp;
}
inline ::kvrwset::Version* TxRS::mutable_version() {
  
  if (version_ == nullptr) {
    auto* p = CreateMaybeMessage<::kvrwset::Version>(GetArenaNoVirtual());
    version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.TxRS.version)
  return version_;
}
inline void TxRS::set_allocated_version(::kvrwset::Version* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:protos.TxRS.version)
}

// -------------------------------------------------------------------

// TxWS

// string key = 1;
inline void TxWS::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TxWS::key() const {
  // @@protoc_insertion_point(field_get:protos.TxWS.key)
  return key_.GetNoArena();
}
inline void TxWS::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.TxWS.key)
}
#if LANG_CXX11
inline void TxWS::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.TxWS.key)
}
#endif
inline void TxWS::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.TxWS.key)
}
inline void TxWS::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.TxWS.key)
}
inline ::std::string* TxWS::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:protos.TxWS.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxWS::release_key() {
  // @@protoc_insertion_point(field_release:protos.TxWS.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxWS::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:protos.TxWS.key)
}

// bytes value = 2;
inline void TxWS::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TxWS::value() const {
  // @@protoc_insertion_point(field_get:protos.TxWS.value)
  return value_.GetNoArena();
}
inline void TxWS::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.TxWS.value)
}
#if LANG_CXX11
inline void TxWS::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.TxWS.value)
}
#endif
inline void TxWS::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.TxWS.value)
}
inline void TxWS::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.TxWS.value)
}
inline ::std::string* TxWS::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:protos.TxWS.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxWS::release_value() {
  // @@protoc_insertion_point(field_release:protos.TxWS.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxWS::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:protos.TxWS.value)
}

// bool is_del = 3;
inline void TxWS::clear_is_del() {
  is_del_ = false;
}
inline bool TxWS::is_del() const {
  // @@protoc_insertion_point(field_get:protos.TxWS.is_del)
  return is_del_;
}
inline void TxWS::set_is_del(bool value) {
  
  is_del_ = value;
  // @@protoc_insertion_point(field_set:protos.TxWS.is_del)
}

// -------------------------------------------------------------------

// MvccResponse

// bool result = 1;
inline void MvccResponse::clear_result() {
  result_ = false;
}
inline bool MvccResponse::result() const {
  // @@protoc_insertion_point(field_get:protos.MvccResponse.result)
  return result_;
}
inline void MvccResponse::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protos.MvccResponse.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_fpga_2eproto
