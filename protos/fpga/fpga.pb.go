// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fpga/fpga.proto

package fpga

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VsccEnvelope struct {
	SignR                string   `protobuf:"bytes,1,opt,name=sign_r,json=signR,proto3" json:"sign_r,omitempty"`
	SignS                string   `protobuf:"bytes,2,opt,name=sign_s,json=signS,proto3" json:"sign_s,omitempty"`
	PkX                  string   `protobuf:"bytes,3,opt,name=pk_x,json=pkX,proto3" json:"pk_x,omitempty"`
	PkY                  string   `protobuf:"bytes,4,opt,name=pk_y,json=pkY,proto3" json:"pk_y,omitempty"`
	E                    string   `protobuf:"bytes,5,opt,name=e,proto3" json:"e,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VsccEnvelope) Reset()         { *m = VsccEnvelope{} }
func (m *VsccEnvelope) String() string { return proto.CompactTextString(m) }
func (*VsccEnvelope) ProtoMessage()    {}
func (*VsccEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_715153acf2a30ae8, []int{0}
}

func (m *VsccEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VsccEnvelope.Unmarshal(m, b)
}
func (m *VsccEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VsccEnvelope.Marshal(b, m, deterministic)
}
func (m *VsccEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VsccEnvelope.Merge(m, src)
}
func (m *VsccEnvelope) XXX_Size() int {
	return xxx_messageInfo_VsccEnvelope.Size(m)
}
func (m *VsccEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_VsccEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_VsccEnvelope proto.InternalMessageInfo

func (m *VsccEnvelope) GetSignR() string {
	if m != nil {
		return m.SignR
	}
	return ""
}

func (m *VsccEnvelope) GetSignS() string {
	if m != nil {
		return m.SignS
	}
	return ""
}

func (m *VsccEnvelope) GetPkX() string {
	if m != nil {
		return m.PkX
	}
	return ""
}

func (m *VsccEnvelope) GetPkY() string {
	if m != nil {
		return m.PkY
	}
	return ""
}

func (m *VsccEnvelope) GetE() string {
	if m != nil {
		return m.E
	}
	return ""
}

type VsccResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VsccResponse) Reset()         { *m = VsccResponse{} }
func (m *VsccResponse) String() string { return proto.CompactTextString(m) }
func (*VsccResponse) ProtoMessage()    {}
func (*VsccResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_715153acf2a30ae8, []int{1}
}

func (m *VsccResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VsccResponse.Unmarshal(m, b)
}
func (m *VsccResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VsccResponse.Marshal(b, m, deterministic)
}
func (m *VsccResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VsccResponse.Merge(m, src)
}
func (m *VsccResponse) XXX_Size() int {
	return xxx_messageInfo_VsccResponse.Size(m)
}
func (m *VsccResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VsccResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VsccResponse proto.InternalMessageInfo

func (m *VsccResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type Block4Mvcc struct {
	Num                  uint32              `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Txs                  []*Transaction4Mvcc `protobuf:"bytes,2,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Block4Mvcc) Reset()         { *m = Block4Mvcc{} }
func (m *Block4Mvcc) String() string { return proto.CompactTextString(m) }
func (*Block4Mvcc) ProtoMessage()    {}
func (*Block4Mvcc) Descriptor() ([]byte, []int) {
	return fileDescriptor_715153acf2a30ae8, []int{2}
}

func (m *Block4Mvcc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block4Mvcc.Unmarshal(m, b)
}
func (m *Block4Mvcc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block4Mvcc.Marshal(b, m, deterministic)
}
func (m *Block4Mvcc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block4Mvcc.Merge(m, src)
}
func (m *Block4Mvcc) XXX_Size() int {
	return xxx_messageInfo_Block4Mvcc.Size(m)
}
func (m *Block4Mvcc) XXX_DiscardUnknown() {
	xxx_messageInfo_Block4Mvcc.DiscardUnknown(m)
}

var xxx_messageInfo_Block4Mvcc proto.InternalMessageInfo

func (m *Block4Mvcc) GetNum() uint32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *Block4Mvcc) GetTxs() []*Transaction4Mvcc {
	if m != nil {
		return m.Txs
	}
	return nil
}

type Transaction4Mvcc struct {
	IndexInBlock         uint64   `protobuf:"varint,1,opt,name=index_in_block,json=indexInBlock,proto3" json:"index_in_block,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	RdCount              uint32   `protobuf:"varint,3,opt,name=rd_count,json=rdCount,proto3" json:"rd_count,omitempty"`
	WtCount              uint32   `protobuf:"varint,4,opt,name=wt_count,json=wtCount,proto3" json:"wt_count,omitempty"`
	Rs                   []*TxRS  `protobuf:"bytes,5,rep,name=rs,proto3" json:"rs,omitempty"`
	Ws                   []*TxWS  `protobuf:"bytes,6,rep,name=ws,proto3" json:"ws,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction4Mvcc) Reset()         { *m = Transaction4Mvcc{} }
func (m *Transaction4Mvcc) String() string { return proto.CompactTextString(m) }
func (*Transaction4Mvcc) ProtoMessage()    {}
func (*Transaction4Mvcc) Descriptor() ([]byte, []int) {
	return fileDescriptor_715153acf2a30ae8, []int{3}
}

func (m *Transaction4Mvcc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction4Mvcc.Unmarshal(m, b)
}
func (m *Transaction4Mvcc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction4Mvcc.Marshal(b, m, deterministic)
}
func (m *Transaction4Mvcc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction4Mvcc.Merge(m, src)
}
func (m *Transaction4Mvcc) XXX_Size() int {
	return xxx_messageInfo_Transaction4Mvcc.Size(m)
}
func (m *Transaction4Mvcc) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction4Mvcc.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction4Mvcc proto.InternalMessageInfo

func (m *Transaction4Mvcc) GetIndexInBlock() uint64 {
	if m != nil {
		return m.IndexInBlock
	}
	return 0
}

func (m *Transaction4Mvcc) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Transaction4Mvcc) GetRdCount() uint32 {
	if m != nil {
		return m.RdCount
	}
	return 0
}

func (m *Transaction4Mvcc) GetWtCount() uint32 {
	if m != nil {
		return m.WtCount
	}
	return 0
}

func (m *Transaction4Mvcc) GetRs() []*TxRS {
	if m != nil {
		return m.Rs
	}
	return nil
}

func (m *Transaction4Mvcc) GetWs() []*TxWS {
	if m != nil {
		return m.Ws
	}
	return nil
}

type TxRS struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxRS) Reset()         { *m = TxRS{} }
func (m *TxRS) String() string { return proto.CompactTextString(m) }
func (*TxRS) ProtoMessage()    {}
func (*TxRS) Descriptor() ([]byte, []int) {
	return fileDescriptor_715153acf2a30ae8, []int{4}
}

func (m *TxRS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRS.Unmarshal(m, b)
}
func (m *TxRS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRS.Marshal(b, m, deterministic)
}
func (m *TxRS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRS.Merge(m, src)
}
func (m *TxRS) XXX_Size() int {
	return xxx_messageInfo_TxRS.Size(m)
}
func (m *TxRS) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRS.DiscardUnknown(m)
}

var xxx_messageInfo_TxRS proto.InternalMessageInfo

func (m *TxRS) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TxRS) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type TxWS struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	IsDel                bool     `protobuf:"varint,3,opt,name=is_del,json=isDel,proto3" json:"is_del,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxWS) Reset()         { *m = TxWS{} }
func (m *TxWS) String() string { return proto.CompactTextString(m) }
func (*TxWS) ProtoMessage()    {}
func (*TxWS) Descriptor() ([]byte, []int) {
	return fileDescriptor_715153acf2a30ae8, []int{5}
}

func (m *TxWS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxWS.Unmarshal(m, b)
}
func (m *TxWS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxWS.Marshal(b, m, deterministic)
}
func (m *TxWS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxWS.Merge(m, src)
}
func (m *TxWS) XXX_Size() int {
	return xxx_messageInfo_TxWS.Size(m)
}
func (m *TxWS) XXX_DiscardUnknown() {
	xxx_messageInfo_TxWS.DiscardUnknown(m)
}

var xxx_messageInfo_TxWS proto.InternalMessageInfo

func (m *TxWS) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TxWS) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TxWS) GetIsDel() bool {
	if m != nil {
		return m.IsDel
	}
	return false
}

type MvccResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MvccResponse) Reset()         { *m = MvccResponse{} }
func (m *MvccResponse) String() string { return proto.CompactTextString(m) }
func (*MvccResponse) ProtoMessage()    {}
func (*MvccResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_715153acf2a30ae8, []int{6}
}

func (m *MvccResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MvccResponse.Unmarshal(m, b)
}
func (m *MvccResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MvccResponse.Marshal(b, m, deterministic)
}
func (m *MvccResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MvccResponse.Merge(m, src)
}
func (m *MvccResponse) XXX_Size() int {
	return xxx_messageInfo_MvccResponse.Size(m)
}
func (m *MvccResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MvccResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MvccResponse proto.InternalMessageInfo

func (m *MvccResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*VsccEnvelope)(nil), "protos.VsccEnvelope")
	proto.RegisterType((*VsccResponse)(nil), "protos.VsccResponse")
	proto.RegisterType((*Block4Mvcc)(nil), "protos.Block4mvcc")
	proto.RegisterType((*Transaction4Mvcc)(nil), "protos.Transaction4mvcc")
	proto.RegisterType((*TxRS)(nil), "protos.TxRS")
	proto.RegisterType((*TxWS)(nil), "protos.TxWS")
	proto.RegisterType((*MvccResponse)(nil), "protos.MvccResponse")
}

func init() { proto.RegisterFile("fpga/fpga.proto", fileDescriptor_715153acf2a30ae8) }

var fileDescriptor_715153acf2a30ae8 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xbf, 0xd2, 0x30, 0xa4, 0xa1, 0xac, 0x0a, 0x32, 0x88, 0x03, 0xb2, 0x10, 0x2a, 0x20,
	0x25, 0x52, 0xe8, 0x11, 0x71, 0x28, 0x14, 0x09, 0x24, 0x2e, 0x6b, 0xd4, 0x02, 0x17, 0xcb, 0x59,
	0x4f, 0xdc, 0x55, 0x9c, 0xf5, 0x6a, 0xd7, 0x76, 0x92, 0x3b, 0xbf, 0x8a, 0x5f, 0x87, 0x76, 0x6d,
	0x37, 0x21, 0x42, 0xe2, 0x62, 0xef, 0x7b, 0x6f, 0x66, 0x67, 0xc6, 0xcf, 0x03, 0x0f, 0x16, 0x32,
	0x4f, 0xa7, 0xe6, 0x31, 0x91, 0xaa, 0xac, 0x4a, 0x32, 0xb0, 0x2f, 0x1d, 0x49, 0x18, 0x5d, 0x6b,
	0xc6, 0xae, 0x44, 0x83, 0x45, 0x29, 0x91, 0x3c, 0x82, 0x81, 0xe6, 0xb9, 0x48, 0x54, 0xe8, 0x3c,
	0x77, 0xce, 0xef, 0xd1, 0xc0, 0x20, 0x7a, 0x47, 0xeb, 0xd0, 0xdd, 0xd1, 0x31, 0x79, 0x08, 0xbe,
	0x5c, 0x26, 0x9b, 0xd0, 0xb3, 0xa4, 0x27, 0x97, 0xdf, 0x3b, 0x6a, 0x1b, 0xfa, 0x3d, 0xf5, 0x83,
	0x8c, 0xc0, 0xc1, 0x30, 0xb0, 0xd8, 0xc1, 0xe8, 0x65, 0x5b, 0x91, 0xa2, 0x96, 0xa5, 0xd0, 0x48,
	0x1e, 0xc3, 0x40, 0xa1, 0xae, 0x8b, 0xca, 0x56, 0x1c, 0xd2, 0x0e, 0x45, 0x5f, 0x00, 0x2e, 0x8b,
	0x92, 0x2d, 0x2f, 0x56, 0x0d, 0x63, 0xe4, 0x14, 0x3c, 0x51, 0xaf, 0x6c, 0xc8, 0x09, 0x35, 0x47,
	0xf2, 0x1a, 0xbc, 0x6a, 0x63, 0xfa, 0xf1, 0xce, 0xef, 0xcf, 0xc2, 0x76, 0x2c, 0x3d, 0xf9, 0xa6,
	0x52, 0xa1, 0x53, 0x56, 0xf1, 0x52, 0xd8, 0x44, 0x6a, 0x82, 0xa2, 0xdf, 0x0e, 0x9c, 0x1e, 0x2a,
	0xe4, 0x05, 0x8c, 0xb9, 0xc8, 0x70, 0x93, 0x70, 0x91, 0xcc, 0x4d, 0x25, 0x7b, 0xbb, 0x4f, 0x47,
	0x96, 0xfd, 0x2c, 0x6c, 0x75, 0x32, 0x06, 0x97, 0x67, 0xdd, 0xd4, 0x2e, 0xcf, 0xc8, 0x13, 0x18,
	0xaa, 0x2c, 0x61, 0x65, 0x2d, 0x2a, 0x3b, 0xf6, 0x09, 0x3d, 0x56, 0xd9, 0x07, 0x03, 0x8d, 0xb4,
	0xae, 0x3a, 0xc9, 0x6f, 0xa5, 0x75, 0xd5, 0x4a, 0xcf, 0xc0, 0x55, 0x3a, 0x0c, 0x6c, 0xaf, 0xa3,
	0xbb, 0x5e, 0x37, 0x34, 0xa6, 0xae, 0xd2, 0x46, 0x5d, 0xeb, 0x70, 0x70, 0xa8, 0xde, 0xc4, 0xd4,
	0x5d, 0xeb, 0x68, 0x06, 0xbe, 0x89, 0x34, 0x9f, 0x60, 0x89, 0xdb, 0xce, 0x17, 0x73, 0x24, 0x21,
	0x1c, 0x37, 0xa8, 0x34, 0x2f, 0x45, 0xd7, 0x60, 0x0f, 0xa3, 0x2b, 0x93, 0x73, 0xf3, 0xaf, 0x9c,
	0x33, 0x08, 0x9a, 0xb4, 0xa8, 0xb1, 0x37, 0xd2, 0x02, 0xe3, 0x2f, 0xd7, 0x49, 0x86, 0x85, 0x9d,
	0x69, 0x48, 0x03, 0xae, 0x3f, 0x62, 0x61, 0xbc, 0xfa, 0xda, 0xfc, 0xdf, 0xab, 0xd9, 0x2f, 0x07,
	0xfc, 0x4f, 0x32, 0x4f, 0xc9, 0x7b, 0x18, 0x5f, 0xa3, 0xe2, 0x8b, 0x6d, 0xcc, 0xf3, 0x8b, 0x46,
	0x33, 0x46, 0xce, 0xfa, 0x79, 0xf6, 0x7f, 0xb3, 0xa7, 0x7f, 0xb1, 0xfd, 0xf5, 0xd1, 0x11, 0x79,
	0x07, 0xe3, 0x18, 0x45, 0xb6, 0x67, 0x3c, 0xe9, 0x23, 0x77, 0xdc, 0x2e, 0x7b, 0xbf, 0xb9, 0xe8,
	0xe8, 0xf2, 0xcd, 0xcf, 0x57, 0x39, 0xaf, 0x6e, 0xeb, 0xf9, 0x84, 0x95, 0xab, 0xe9, 0xed, 0x56,
	0xa2, 0x2a, 0x30, 0xcb, 0x51, 0x4d, 0x17, 0xe9, 0x5c, 0x71, 0x36, 0x6d, 0xd3, 0xec, 0x1e, 0xcc,
	0xdb, 0x0d, 0x78, 0xfb, 0x27, 0x00, 0x00, 0xff, 0xff, 0x68, 0xe1, 0x31, 0x63, 0x1b, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FpgaClient is the client API for Fpga service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FpgaClient interface {
	VerifySig4Vscc(ctx context.Context, in *VsccEnvelope, opts ...grpc.CallOption) (*VsccResponse, error)
	SendBlock4Mvcc(ctx context.Context, in *Block4Mvcc, opts ...grpc.CallOption) (*MvccResponse, error)
}

type fpgaClient struct {
	cc *grpc.ClientConn
}

func NewFpgaClient(cc *grpc.ClientConn) FpgaClient {
	return &fpgaClient{cc}
}

func (c *fpgaClient) VerifySig4Vscc(ctx context.Context, in *VsccEnvelope, opts ...grpc.CallOption) (*VsccResponse, error) {
	out := new(VsccResponse)
	err := c.cc.Invoke(ctx, "/protos.Fpga/VerifySig4vscc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fpgaClient) SendBlock4Mvcc(ctx context.Context, in *Block4Mvcc, opts ...grpc.CallOption) (*MvccResponse, error) {
	out := new(MvccResponse)
	err := c.cc.Invoke(ctx, "/protos.Fpga/SendBlock4mvcc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FpgaServer is the server API for Fpga service.
type FpgaServer interface {
	VerifySig4Vscc(context.Context, *VsccEnvelope) (*VsccResponse, error)
	SendBlock4Mvcc(context.Context, *Block4Mvcc) (*MvccResponse, error)
}

func RegisterFpgaServer(s *grpc.Server, srv FpgaServer) {
	s.RegisterService(&_Fpga_serviceDesc, srv)
}

func _Fpga_VerifySig4Vscc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VsccEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FpgaServer).VerifySig4Vscc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Fpga/VerifySig4Vscc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FpgaServer).VerifySig4Vscc(ctx, req.(*VsccEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fpga_SendBlock4Mvcc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Block4Mvcc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FpgaServer).SendBlock4Mvcc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Fpga/SendBlock4Mvcc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FpgaServer).SendBlock4Mvcc(ctx, req.(*Block4Mvcc))
	}
	return interceptor(ctx, in, info, handler)
}

var _Fpga_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Fpga",
	HandlerType: (*FpgaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VerifySig4vscc",
			Handler:    _Fpga_VerifySig4Vscc_Handler,
		},
		{
			MethodName: "SendBlock4mvcc",
			Handler:    _Fpga_SendBlock4Mvcc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fpga/fpga.proto",
}
