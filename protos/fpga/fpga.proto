/*
cd /c/goworkspace/src/github.com/hyperledger/fabric/protos
protoc -I ./ fpga/fpga.proto --go_out=plugins=grpc:fpga
*/

syntax = "proto3";

option go_package = "github.com/hyperledger/fabric/protos/fpga";

package protos;

//import "ledger/rwset/kvrwset/kv_rwset.proto";

// Interface exported by the server.
service Fpga {
    rpc VerifySig4vscc(VsccEnvelope) returns (VsccResponse) {}
    rpc SendBlock4mvcc(Block4mvcc) returns (MvccResponse) {}
}


message VsccEnvelope {
	string sign_r = 1;
	string sign_s = 2;
	string pk_x = 3;
	string pk_y = 4;
	string e = 5;
}

message VsccResponse {
	bool result = 1;
}

// the version is calculated according to:
// committingTxHeight := version.NewHeight(block.Num, uint64(tx.IndexInBlock))
//  ValidateAndPrepareBatch in state_base_validator.go

message Block4mvcc {
        uint32 num = 1;
        repeated Transaction4mvcc txs = 2;
}

message Transaction4mvcc {
	uint64 index_in_block = 1;
	string id = 2;
        uint32 rd_count = 3;
        uint32 wt_count = 4;
	repeated TxRS rs = 5;
	repeated TxWS ws = 6;
}

message TxRS {
        string key = 1;
        string version = 2;
}

message TxWS {
        string key = 1;
        string value = 2;
        bool is_del = 3;
}

message MvccResponse {
        bool result = 1;
}
