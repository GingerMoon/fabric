/*
cd /c/goworkspace/src/github.com/hyperledger/fabric/protos
protoc -I ./ fpga/fpga.proto --go_out=plugins=grpc:fpga
*/

syntax = "proto3";

option go_package = "github.com/hyperledger/fabric/protos/fpga";

package protos;

import "ledger/rwset/kvrwset/kv_rwset.proto";
import "peer/transaction.proto";

// Interface exported by the server.
service Fpga {
    rpc SendBlockDataSize4vscc(BlockDataSize4vscc) returns (ProcessResult){}
    rpc VerifySig4vscc(VsccEnvelope) returns (VsccResponse) {}
    rpc SendBlock4mvcc(Block4mvcc) returns (MvccResponse) {}
}

message BlockDataSize4vscc {
	string chain_id = 1;
	uint64 size = 2;
}

message ProcessResult {
	bool result = 1;
}

message VsccEnvelope {
	string pubkeybytes_encoded = 1;
	string signedData_encoded = 2;
	string signature_encoded = 3;
}

message VsccResponse {
	bool result = 1;
}

// the version is calculated according to:
// committingTxHeight := version.NewHeight(block.Num, uint64(tx.IndexInBlock))
//  ValidateAndPrepareBatch in state_base_validator.go
message Block4mvcc {
	uint64 num = 1;
	repeated Transaction4mvcc txs = 2;
}

message Transaction4mvcc {
	uint64 index_in_block = 1;
	string id = 2;
	TxRwSet rw_set = 3;
	protos.TxValidationCode validation_code = 4;
}

message TxRwSet {
	repeated NsRwSet ns_rw_sets = 1;
}

message NsRwSet {
	string name_space = 1;
	kvrwset.KVRWSet kv_rw_set = 2;
	repeated CollHashedRwSet coll_hashed_rw_sets = 3;
}

message CollHashedRwSet {
	string collection_name = 1;
	kvrwset.HashedRWSet hashed_rw_set = 2;
bytes pvt_rw_set_hash = 3;
}

message MvccResponse {
bool result = 1;
}
